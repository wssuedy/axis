{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///../dist/lib/index.js","webpack:///../node_modules/underscore/underscore.js","webpack:///(webpack)/node_modules/util/util.js","webpack:///../node_modules/uuid/index.js","webpack:///../dist/lib/Event.js","webpack:///../node_modules/nedb/lib/model.js","webpack:///(webpack)/node_modules/events/events.js","webpack:///(webpack)/node_modules/timers-browserify/main.js","webpack:///../node_modules/nedb/node_modules/async/lib/async.js","webpack:///../dist/lib/Snap.js","webpack:///../dist/lib/Actor.js","webpack:///../node_modules/binary-search-tree/lib/customUtils.js","webpack:///../node_modules/binary-search-tree/lib/bst.js","webpack:///../node_modules/nedb/lib/indexes.js","webpack:///../node_modules/nedb/browser-version/browser-specific/lib/customUtils.js","webpack:///../dist/lib/eventAlias.js","webpack:///../node_modules/uuid/lib/bytesToUuid.js","webpack:///../node_modules/uuid/lib/rng-browser.js","webpack:///../dist/lib/Domain.js","webpack:///./src/domain.js","webpack:///./src/User.js","webpack:///./src/UserManager.js","webpack:///./src/index.js","webpack:///../dist/lib/ActorEventEmitter.js","webpack:///../dist/lib/Role.js","webpack:///../node_modules/debug/node_modules/ms/index.js","webpack:///../node_modules/debug/src/debug.js","webpack:///../node_modules/debug/src/browser.js","webpack:///../dist/lib/EventBus.js","webpack:///(webpack)/node_modules/assert/assert.js","webpack:///../node_modules/any-promise/loader.js","webpack:///../node_modules/any-promise/register-shim.js","webpack:///../node_modules/any-promise/index.js","webpack:///../node_modules/thenify/index.js","webpack:///../node_modules/nedb/lib/cursor.js","webpack:///(webpack)/node_modules/path-browserify/index.js","webpack:///../node_modules/localforage/dist/localforage.js","webpack:///../node_modules/nedb/browser-version/browser-specific/lib/storage.js","webpack:///../node_modules/nedb/lib/persistence.js","webpack:///../node_modules/binary-search-tree/lib/avltree.js","webpack:///../node_modules/binary-search-tree/index.js","webpack:///../node_modules/nedb/lib/executor.js","webpack:///(webpack)/node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///(webpack)/node_modules/util/support/isBufferBrowser.js","webpack:///../node_modules/nedb/lib/datastore.js","webpack:///../node_modules/nedb/index.js","webpack:///../node_modules/nedb-promise/index.js","webpack:///../dist/lib/DefaultEventStore.js","webpack:///../dist/lib/reborn.js","webpack:///(webpack)/node_modules/setimmediate/setImmediate.js","webpack:///../dist/lib/Repository.js","webpack:///(webpack)/node_modules/querystring-es3/encode.js","webpack:///(webpack)/node_modules/querystring-es3/decode.js","webpack:///(webpack)/node_modules/querystring-es3/index.js","webpack:///../node_modules/uuid/v4.js","webpack:///../node_modules/uuid/v1.js","webpack:///../dist/lib/Service.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","Function","eval","window","Domain_1","Domain","default","Actor_1","Actor","Event_1","Event","Domain_2","domain","root","previousUnderscore","_","breaker","ArrayProto","ObjProto","FuncProto","slice","toString","nativeForEach","forEach","nativeMap","map","nativeReduce","reduce","nativeReduceRight","reduceRight","nativeFilter","filter","nativeEvery","every","nativeSome","some","nativeIndexOf","indexOf","nativeLastIndexOf","lastIndexOf","nativeIsArray","isArray","nativeKeys","keys","nativeBind","bind","obj","_wrapped","VERSION","each","iterator","context","key","has","collect","results","index","list","reduceError","foldl","inject","memo","initial","TypeError","foldr","find","detect","result","any","select","reject","all","identity","contains","include","target","invoke","method","isFunc","isFunction","pluck","where","attrs","first","isEmpty","findWhere","max","Math","Infinity","computed","min","shuffle","rand","shuffled","random","lookupIterator","sortBy","criteria","sort","left","right","a","b","group","behavior","groupBy","countBy","sortedIndex","low","high","mid","toArray","values","size","head","take","guard","last","rest","tail","drop","compact","flatten","input","shallow","output","without","difference","uniq","unique","isSorted","seen","union","intersection","item","other","zip","from","hasIndex","range","start","stop","step","ceil","idx","func","partial","bindAll","funcs","functions","f","memoize","hasher","delay","wait","defer","throttle","previous","later","Date","now","remaining","debounce","immediate","callNow","ran","wrap","wrapper","compose","after","times","pairs","invert","methods","names","extend","source","prop","pick","copy","omit","defaults","clone","isObject","tap","interceptor","eq","aStack","bStack","className","String","global","multiline","ignoreCase","aCtor","constructor","bCtor","pop","isEqual","isString","isElement","nodeType","isArguments","isFinite","isNaN","parseFloat","isNumber","isBoolean","isNull","isUndefined","noConflict","accum","floor","entityMap","escape","&","<",">","\"","'","/","unescape","entityRegexes","RegExp","join","string","replace","match","mixin","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n","\t"," "," ","escaper","template","text","data","settings","render","matcher","offset","variable","chain","_chain","formatRegExp","format","objects","inspect","str","x","Number","JSON","stringify","deprecate","fn","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","ret","primitive","simple","formatPrimitive","visibleKeys","hash","val","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","formatProperty","formatArray","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","set","split","line","substr","ar","arg","re","objectToString","pad","debuglog","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","v1","v4","uuid","updatedDataKey","Symbol","[object Object]","actor","type","sagaId","direct","roleName","actorId","actorType","json","toJSON","updatedData","v","event","parse","__proto__","util","modifierFunctions","lastStepModifierFunctions","comparisonFunctions","logicalOperators","arrayComparisonFunctions","checkKey","k","checkObject","deepCopy","strictKeys","res","isPrimitiveType","compareNSB","compareArrays","comp","compareThings","_compareStrings","aKeys","bKeys","compareStrings","getTime","getDotValue","field","objs","fieldParts","parseInt","areThingsEqual","areComparable","query","queryKeys","queryKey","queryValue","matchQueryPart","needAKey","treatObjAsValue","firstChars","dollarFirstChars","objValue","$regex","$set","$unset","$push","$slice","$each","end","$addToSet","addToSet","$pop","$pull","arr","splice","$inc","$max","$min","modifier","createModifierFunction","$lt","$lte","$gt","$gte","$ne","$in","$nin","$exists","exists","$size","$elemMatch","$or","$and","$not","$where","serialize","$$date","deserialize","rawData","modify","updateQuery","newDoc","modifiers","_id","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","er","handler","err","listener","newListener","fired","position","listenerCount","evlistener","emitter","Timeout","clearFn","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","self","clearImmediate","__WEBPACK_AMD_DEFINE_RESULT__","previous_async","async","only_once","called","_each","_map","_keys","callback","completed","eachSeries","iterate","forEachSeries","eachLimit","limit","_eachLimit","forEachLimit","started","running","replenish","doParallel","doSeries","_asyncMap","eachfn","mapSeries","mapLimit","_mapLimit","doParallelLimit","reversed","reverse","_filter","filterSeries","selectSeries","_reject","rejectSeries","_detect","main_callback","detectSeries","auto","tasks","unshift","taskComplete","task","taskCallback","safeResults","rkey","requires","abs","ready","waterfall","wrapIterator","next","_parallel","parallel","parallelLimit","series","makeCallback","_concat","cb","y","concatSeries","whilst","doWhilst","until","doUntil","worker","concurrency","_insert","q","pos","saturated","workers","empty","drain","shift","cargo","payload","working","ts","ds","_console_fn","queues","memoized","unmemoized","unmemoize","count","counter","timesSeries","fns","that","newargs","nextargs","_applyEach","go","applyEach","applyEachSeries","forever","Snap","latestEventIndex","snap","uncommittedEvents","for","setdata","datakey","isLock","lockData","latestLockTime","isAlive","getType","updater","listenerType","listenerId","handleMethodName","$","getRandomArray","defaultCompareKeysFunction","defaultCheckValueEquality","customUtils","BinarySearchTree","options","parent","compareKeys","checkValueEquality","append","toAppend","getMaxKeyDescendant","getMaxKey","getMinKeyDescendant","getMinKey","checkAllNodesFullfillCondition","checkNodeOrdering","checkInternalPointers","checkIsBST","getNumberOfKeys","createSimilar","createLeftChild","leftChild","createRightChild","rightChild","insert","errorType","search","getLowerBoundMatcher","getUpperBoundMatcher","betweenBounds","lbm","ubm","deleteIfLeaf","deleteIfOnlyOneChild","child","delete","replaceWith","newData","executeOnEveryNode","prettyPrint","printData","spacing","AVLTree","model","projectForUnique","elt","Index","fieldName","sparse","treeOptions","reset","tree","doc","failingI","insertMultipleDocs","docs","remove","_key","update","oldDoc","updateMultipleDocs","revertUpdate","revert","pair","getMatching","_res","getBetweenBounds","getAll","node","uid","uint8","temp","num","lookup","extraBytes","byteArrayToBase64","bytes","randomBytes","getAlias","byteToHex","buf","bth","rng","crypto","msCrypto","getRandomValues","rnds8","Uint8Array","rnds","Service_1","eventAlias_1","Repository_1","DefaultEventStore_1","EventBus_1","getActorProxy","Role_1","ActorEventEmitter_1","roleMap","Map","ActorClassMap","eventstore","EventStore","repositorieMap","eventbus","EventBus","register","plugin","roles","repo","role","ActorClass","createBefor","create","getNativeActor","proxy","Proxy","Reflect","member","rn","cxt","Promise","resolve","iservice","nativeCreateActor","service","rollback","then","catch","Classes","Class","alias","handle","getCacheActorIds","supportedActorNames","types","lib","super","changename","subscribe","listen","manager","document","body","innerHTML","listenerMap","act","includes","h","plural","ms","exec","toLowerCase","long","round","fmtShort","prevTime","createDebug","namespace","debug","enabled","curr","diff","coerce","formatter","formatters","formatArgs","useColors","color","charCodeAt","selectColor","init","stack","message","disable","enable","namespaces","save","skips","humanize","load","storage","DEBUG","lastC","removeItem","documentElement","WebkitAppearance","firebug","exception","table","navigator","userAgent","$1","chrome","local","localStorage","localstorage","j","events_1","Snap_1","lockSet","Set","subscribeRepo","events","getLatestEvent","startIndex","evt","saveEvents","getLatestSnapshot","lastEvent","lastEventId","newSnap","createSnap","publish","killSaga","findEventsBySagaId","removeEventsBySagaId","clear","compare","Buffer","_isBuffer","hasOwn","pSlice","functionsHaveNames","pToString","isView","arrbuf","ArrayBuffer","DataView","buffer","assert","ok","regex","getName","truncate","something","rawname","fail","actual","expected","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","lastIndex","Float32Array","Float64Array","actualIndex","actualVisitedObjects","getPrototypeOf","aIsArgs","bIsArgs","ka","objectKeys","kb","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnwantedException","isUnexpectedException","generatedMessage","captureStackTrace","out","fn_name","next_line","substring","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","registered","loadImplementation","implementation","registerGlobal","thenify","$$__fn__$$","createWrapper","createCallback","multiArgs","withCallback","Cursor","db","execFn","_limit","skip","_skip","sortQuery","_sort","projection","_projection","project","candidates","keepId","action","candidate","toPush","_exec","_callback","added","skipped","getCandidates","direction","criterion","executor","normalizeArray","parts","allowAboveRoot","up","splitPathRe","splitPath","filename","xs","resolvedPath","resolvedAbsolute","path","charAt","normalize","isAbsolute","trailingSlash","paths","relative","to","trim","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","basename","ext","extname","require","t","u","code","1","_dereq_","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","element","createTextNode","observe","characterData","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","appendChild","channel","port1","onmessage","port2","postMessage","oldQueue","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","returnValue","getThen","thenable","onError","onSuccess","tryCatch","status","reason","iterable","resolved","allResolver","outValue","race","response","3","4","_typeof","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","properties","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","supportsBlobs","dbContexts","DETECT_BLOB_SUPPORT_STORE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","matchedEdge","_checkBlobSupportWithoutCaching","_getConnection","dbInfo","upgradeNeeded","dbContext","deferredOperation","deferredOperations","dbReady","_deferReadiness","dbArgs","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","warn","newVersion","onerror","onsuccess","_advanceReadiness","_decodeBlob","encodedBlob","arrayBuff","bin","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","asyncStorage","_driver","_initStorage","forages","initPromises","ignoreErrors","forage","_getOriginalConnection","defaultVersion","isNewStore","objectStoreNames","isDowngrade","isUpgrade","incVersion","_isUpgradeNeeded","_defaultConfig","_getUpgradedConnection","store","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","advanced","advance","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","bufferToString","base64String","localforageSerializer","valueType","fileReader","onload","readAsArrayBuffer","blobType","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","webSQLStorage","dbInfoPromise","openDatabase","description","executeSql","serializer","rows","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","localStorageWrapper","keyPrefix","keyPrefixLength","CustomDrivers","DriverType","INDEXEDDB","LOCALSTORAGE","WEBSQL","DefaultDriverOrder","LibraryMethods","DefaultConfig","driver","driverSupport","isSafari","platform","hasFetch","fetch","IDBKeyRange","isIndexedDBValid","isLocalStorageValid","callWhenReady","localForageInstance","libraryMethod","_args","isLibraryDriver","driverName","LocalForage","instance","Constructor","_classCallCheck","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","config","defineDriver","driverObject","complianceError","namingError","customDriverMethods","customDriverMethod","supportPromise","_support","supportResult","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","localforage","writeFile","contents","rename","newFilename","crashSafeWriteFile","appendFile","readFile","unlink","mkdirp","ensureDatafileIntegrity","Persistence","randomString","inMemoryOnly","corruptAlertThreshold","afterSerialization","beforeDeserialization","nodeWebkitAppName","getNWAppFilename","ensureDirectoryExists","appName","relativeFilename","home","LOCALAPPDATA","APPDATA","HOME","persistCachedDatabase","toPersist","getAllData","indexes","$$indexCreated","compactDatafile","setAutocompactionInterval","interval","realInterval","stopAutocompaction","autocompactionIntervalId","persistNewState","newDocs","treatRawData","dataById","tdata","corruptItems","$$deleted","$$indexRemoved","loadDatabase","resetIndexes","treatedData","persistence","processBuffer","_AVLTree","checkHeightCorrect","leftH","rightH","height","balanceFactor","checkBalanceFactors","checkIsAVLT","super_","rightRotation","ah","bh","ch","leftRotation","rightTooSmall","leftTooSmall","rebalanceAlongPath","rotated","newRoot","insertPath","currentNode","newTree","deletePath","Executor","newArguments","lastArg","forceQueuing","ctor","superCtor","writable","TempCtor","fill","readUInt8","Datastore","autoload","timestampData","ttlIndexes","ensureIndex","missingFieldName","expireAfterSeconds","removeIndex","addToIndexes","failingIndex","removeFromIndexes","updateIndexes","dontExpireStaleDocs","usableQueryKeys","indexNames","expiredDocsIds","validDocs","ttlIndexesFieldNames","valid","_remove","preparedDoc","prepareDocumentForInsertion","_insertInCache","createNewId","tentativeId","createdAt","updatedAt","_insertMultipleDocsInCache","preparedDocs","findOne","_update","multi","upsert","numReplaced","toBeInserted","modifiedDoc","modifications","updatedDocs","returnUpdatedDocs","updatedDocsDC","numRemoved","removedDocs","NedbDatastore","fromInstance","nedbInstance","newDB","nedb","cfind","projections","cfindOne","ccount","datastore","snaps","sagas","getSaga","existSaga","done","alive","eventsJSONArr","snapId","getSnapshotById","loadEvents","registerImmediate","html","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","script","addEventListener","attachEvent","reborn_1","cache","getSnapshotByIndex","getEvents","_snap","_index","_validateIndex","_get","getFromCache","getEventsBySnapshot","assign","stringifyPrimitive","ks","encodeURIComponent","qs","maxKeys","kstr","vstr","decodeURIComponent","decode","encode","bytesToUuid","ii","_seedBytes","_nodeId","_clockseq","_lastMSecs","_lastNSecs","clockseq","nsecs","dt","tl","tmh","bus","getActor","createActor","lockMode","sagaMode","applied","_event","handles","tryLock","lock","actorLock","unsubscribe","getHistory"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Domain_1 = require(\"./Domain\");\nexports.Domain = Domain_1.default;\nvar Actor_1 = require(\"./Actor\");\nexports.Actor = Actor_1.default;\nvar Event_1 = require(\"./Event\");\nexports.Event = Event_1.default;\nconst Domain_2 = require(\"./Domain\");\n// default domain instance.\nexports.domain = new Domain_2.default();\n//# sourceMappingURL=index.js.map","//     Underscore.js 1.4.4\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push             = ArrayProto.push,\n      slice            = ArrayProto.slice,\n      concat           = ArrayProto.concat,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.4.4';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? null : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array.\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        index : index,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function(value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key, value) {\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n    });\n  };\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  };\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    each(input, function(value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, l = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function() {\n      return func.apply(context, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n    var later = function() {\n      previous = new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var values = [];\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var pairs = [];\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n        return false;\n      }\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof (/./) !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(n);\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid = require('uuid').v1;\nconst qs = require('querystring');\nconst updatedDataKey = Symbol();\nclass Event {\n    constructor(actor, data, type, method, sagaId, direct = false, roleName) {\n        this.data = data;\n        this.type = type;\n        this.method = method;\n        this.sagaId = sagaId;\n        this.direct = direct;\n        this.roleName = roleName;\n        this.index = 0;\n        this[updatedDataKey] = null;\n        this.id = uuid();\n        this.actorId = actor.id;\n        this.actorType = actor.type;\n        this.date = new Date();\n    }\n    get json() {\n        return Event.toJSON(this);\n    }\n    get updatedData() {\n        return this[updatedDataKey];\n    }\n    set updatedData(v) {\n        if (this[updatedDataKey])\n            throw new Error(\"only set once.\");\n        this[updatedDataKey] = v;\n    }\n    static toJSON(event) {\n        let json = JSON.parse(JSON.stringify(event));\n        json.updatedData = event.updatedData;\n        return json;\n    }\n    static parse(data) {\n        let event = JSON.parse(JSON.stringify(data));\n        let updatedData = event.updatedData;\n        delete event.updatedData;\n        event[updatedDataKey] = updatedData;\n        event.__proto__ = Event.prototype;\n        return event;\n    }\n}\nexports.default = Event;\n//# sourceMappingURL=Event.js.map","/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n */\n\nvar util = require('util')\n  , _ = require('underscore')\n  , modifierFunctions = {}\n  , lastStepModifierFunctions = {}\n  , comparisonFunctions = {}\n  , logicalOperators = {}\n  , arrayComparisonFunctions = {}\n  ;\n\n\n/**\n * Check a key, throw an error if the key is non valid\n * @param {String} k key\n * @param {Model} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n */\nfunction checkKey (k, v) {\n  if (typeof k === 'number') {\n    k = k.toString();\n  }\n\n  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {\n    throw new Error('Field names cannot begin with the $ character');\n  }\n\n  if (k.indexOf('.') !== -1) {\n    throw new Error('Field names cannot contain a .');\n  }\n}\n\n\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n */\nfunction checkObject (obj) {\n  if (util.isArray(obj)) {\n    obj.forEach(function (o) {\n      checkObject(o);\n    });\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    Object.keys(obj).forEach(function (k) {\n      checkKey(k, obj[k]);\n      checkObject(obj[k]);\n    });\n  }\n}\n\n\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n */\nfunction serialize (obj) {\n  var res;\n\n  res = JSON.stringify(obj, function (k, v) {\n    checkKey(k, v);\n\n    if (v === undefined) { return undefined; }\n    if (v === null) { return null; }\n\n    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n    if (typeof this[k].getTime === 'function') { return { $$date: this[k].getTime() }; }\n\n    return v;\n  });\n\n  return res;\n}\n\n\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n */\nfunction deserialize (rawData) {\n  return JSON.parse(rawData, function (k, v) {\n    if (k === '$$date') { return new Date(v); }\n    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) { return v; }\n    if (v && v.$$date) { return v.$$date; }\n\n    return v;\n  });\n}\n\n\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n */\nfunction deepCopy (obj, strictKeys) {\n  var res;\n\n  if ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       (util.isDate(obj)) ) {\n    return obj;\n  }\n\n  if (util.isArray(obj)) {\n    res = [];\n    obj.forEach(function (o) { res.push(deepCopy(o, strictKeys)); });\n    return res;\n  }\n\n  if (typeof obj === 'object') {\n    res = {};\n    Object.keys(obj).forEach(function (k) {\n      if (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1)) {\n        res[k] = deepCopy(obj[k], strictKeys);\n      }\n    });\n    return res;\n  }\n\n  return undefined;   // For now everything else is undefined. We should probably throw an error instead\n}\n\n\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n */\nfunction isPrimitiveType (obj) {\n  return ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       util.isDate(obj) ||\n       util.isArray(obj));\n}\n\n\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n */\nfunction compareNSB (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  return 0;\n}\n\nfunction compareArrays (a, b) {\n  var i, comp;\n\n  for (i = 0; i < Math.min(a.length, b.length); i += 1) {\n    comp = compareThings(a[i], b[i]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length);\n}\n\n\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n *\n * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n */\nfunction compareThings (a, b, _compareStrings) {\n  var aKeys, bKeys, comp, i\n    , compareStrings = _compareStrings || compareNSB;\n\n  // undefined\n  if (a === undefined) { return b === undefined ? 0 : -1; }\n  if (b === undefined) { return a === undefined ? 0 : 1; }\n\n  // null\n  if (a === null) { return b === null ? 0 : -1; }\n  if (b === null) { return a === null ? 0 : 1; }\n\n  // Numbers\n  if (typeof a === 'number') { return typeof b === 'number' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'number') { return typeof a === 'number' ? compareNSB(a, b) : 1; }\n\n  // Strings\n  if (typeof a === 'string') { return typeof b === 'string' ? compareStrings(a, b) : -1; }\n  if (typeof b === 'string') { return typeof a === 'string' ? compareStrings(a, b) : 1; }\n\n  // Booleans\n  if (typeof a === 'boolean') { return typeof b === 'boolean' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'boolean') { return typeof a === 'boolean' ? compareNSB(a, b) : 1; }\n\n  // Dates\n  if (util.isDate(a)) { return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1; }\n  if (util.isDate(b)) { return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1; }\n\n  // Arrays (first element is most significant and so on)\n  if (util.isArray(a)) { return util.isArray(b) ? compareArrays(a, b) : -1; }\n  if (util.isArray(b)) { return util.isArray(a) ? compareArrays(a, b) : 1; }\n\n  // Objects\n  aKeys = Object.keys(a).sort();\n  bKeys = Object.keys(b).sort();\n\n  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length);\n}\n\n\n\n// ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {Model} value\n */\n\n/**\n * Set a field to a new value\n */\nlastStepModifierFunctions.$set = function (obj, field, value) {\n  obj[field] = value;\n};\n\n\n/**\n * Unset a field\n */\nlastStepModifierFunctions.$unset = function (obj, field, value) {\n  delete obj[field];\n};\n\n\n/**\n * Push an element to the end of an array field\n * Optional modifier $each instead of value to push several values\n * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n * Différeence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n */\nlastStepModifierFunctions.$push = function (obj, field, value) {\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $push an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {\n    value.$each = [];\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length >= 3 || (Object.keys(value).length === 2 && value.$slice === undefined)) { throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      obj[field].push(v);\n    });\n\n    if (value.$slice === undefined || typeof value.$slice !== 'number') { return; }\n\n    if (value.$slice === 0) {\n      obj[field] = [];\n    } else {\n      var start, end, n = obj[field].length;\n      if (value.$slice < 0) {\n        start = Math.max(0, n + value.$slice);\n        end = n;\n      } else if (value.$slice > 0) {\n        start = 0;\n        end = Math.min(n, value.$slice);\n      }\n      obj[field] = obj[field].slice(start, end);\n    }\n  } else {\n    obj[field].push(value);\n  }\n};\n\n\n/**\n * Add an element to an array field only if it is not already in it\n * No modification if the element is already in the array\n * Note that it doesn't check whether the original array contains duplicates\n */\nlastStepModifierFunctions.$addToSet = function (obj, field, value) {\n  var addToSet = true;\n\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $addToSet an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) { throw new Error(\"Can't use another field in conjunction with $each\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      lastStepModifierFunctions.$addToSet(obj, field, v);\n    });\n  } else {\n    obj[field].forEach(function (v) {\n      if (compareThings(v, value) === 0) { addToSet = false; }\n    });\n    if (addToSet) { obj[field].push(value); }\n  }\n};\n\n\n/**\n * Remove the first or last element of an array\n */\nlastStepModifierFunctions.$pop = function (obj, field, value) {\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pop an element from non-array values\"); }\n  if (typeof value !== 'number') { throw new Error(value + \" isn't an integer, can't use it with $pop\"); }\n  if (value === 0) { return; }\n\n  if (value > 0) {\n    obj[field] = obj[field].slice(0, obj[field].length - 1);\n  } else {\n    obj[field] = obj[field].slice(1);\n  }\n};\n\n\n/**\n * Removes all instances of a value from an existing array\n */\nlastStepModifierFunctions.$pull = function (obj, field, value) {\n  var arr, i;\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pull an element from non-array values\"); }\n\n  arr = obj[field];\n  for (i = arr.length - 1; i >= 0; i -= 1) {\n    if (match(arr[i], value)) {\n      arr.splice(i, 1);\n    }\n  }\n};\n\n\n/**\n * Increment a numeric field's value\n */\nlastStepModifierFunctions.$inc = function (obj, field, value) {\n  if (typeof value !== 'number') { throw new Error(value + \" must be a number\"); }\n\n  if (typeof obj[field] !== 'number') {\n    if (!_.has(obj, field)) {\n      obj[field] = value;\n    } else {\n      throw new Error(\"Don't use the $inc modifier on non-number fields\");\n    }\n  } else {\n    obj[field] += value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is greater than the current value of the field\n */\nlastStepModifierFunctions.$max = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value > obj[field]) {\n    obj[field] = value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is smaller than the current value of the field\n */\nlastStepModifierFunctions.$min = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') { \n    obj[field] = value;\n  } else if (value < obj[field]) {\n    obj[field] = value;\n  }\n};\n\n// Given its name, create the complete modifier function\nfunction createModifierFunction (modifier) {\n  return function (obj, field, value) {\n    var fieldParts = typeof field === 'string' ? field.split('.') : field;\n\n    if (fieldParts.length === 1) {\n      lastStepModifierFunctions[modifier](obj, field, value);\n    } else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (modifier === '$unset') { return; }   // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n        obj[fieldParts[0]] = {};\n      }\n      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);\n    }\n  };\n}\n\n// Actually create all modifier functions\nObject.keys(lastStepModifierFunctions).forEach(function (modifier) {\n  modifierFunctions[modifier] = createModifierFunction(modifier);\n});\n\n\n/**\n * Modify a DB object according to an update query\n */\nfunction modify (obj, updateQuery) {\n  var keys = Object.keys(updateQuery)\n    , firstChars = _.map(keys, function (item) { return item[0]; })\n    , dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; })\n    , newDoc, modifiers\n    ;\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) { throw new Error(\"You cannot change a document's _id\"); }\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n    throw new Error(\"You cannot mix modifiers and normal fields\");\n  }\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery);\n    newDoc._id = obj._id;\n  } else {\n    // Apply modifiers\n    modifiers = _.uniq(keys);\n    newDoc = deepCopy(obj);\n    modifiers.forEach(function (m) {\n      var keys;\n\n      if (!modifierFunctions[m]) { throw new Error(\"Unknown modifier \" + m); }\n\n      // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n      if (typeof updateQuery[m] !== 'object') {\n        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");\n      }\n\n      keys = Object.keys(updateQuery[m]);\n      keys.forEach(function (k) {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k]);\n      });\n    });\n  }\n\n  // Check result is valid and return it\n  checkObject(newDoc);\n\n  if (obj._id !== newDoc._id) { throw new Error(\"You can't change a document's _id\"); }\n  return newDoc;\n};\n\n\n// ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {Object} obj\n * @param {String} field\n */\nfunction getDotValue (obj, field) {\n  var fieldParts = typeof field === 'string' ? field.split('.') : field\n    , i, objs;\n\n  if (!obj) { return undefined; }   // field cannot be empty so that means we should return undefined so that nothing can match\n\n  if (fieldParts.length === 0) { return obj; }\n\n  if (fieldParts.length === 1) { return obj[fieldParts[0]]; }\n\n  if (util.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    i = parseInt(fieldParts[1], 10);\n    if (typeof i === 'number' && !isNaN(i)) {\n      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))\n    }\n\n    // Return the array of values\n    objs = new Array();\n    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {\n       objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));\n    }\n    return objs;\n  } else {\n    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));\n  }\n}\n\n\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n */\nfunction areThingsEqual (a, b) {\n  var aKeys , bKeys , i;\n\n  // Strings, booleans, numbers, null\n  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' ||\n      b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') { return a === b; }\n\n  // Dates\n  if (util.isDate(a) || util.isDate(b)) { return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime(); }\n\n  // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n  if ((!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b))) || a === undefined || b === undefined) { return false; }\n\n  // General objects (check for deep equality)\n  // a and b should be objects at this point\n  try {\n    aKeys = Object.keys(a);\n    bKeys = Object.keys(b);\n  } catch (e) {\n    return false;\n  }\n\n  if (aKeys.length !== bKeys.length) { return false; }\n  for (i = 0; i < aKeys.length; i += 1) {\n    if (bKeys.indexOf(aKeys[i]) === -1) { return false; }\n    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) { return false; }\n  }\n  return true;\n}\n\n\n/**\n * Check that two values are comparable\n */\nfunction areComparable (a, b) {\n  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) &&\n      typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {\n    return false;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  return true;\n}\n\n\n/**\n * Arithmetic and comparison operators\n * @param {Native value} a Value in the object\n * @param {Native value} b Value in the query\n */\ncomparisonFunctions.$lt = function (a, b) {\n  return areComparable(a, b) && a < b;\n};\n\ncomparisonFunctions.$lte = function (a, b) {\n  return areComparable(a, b) && a <= b;\n};\n\ncomparisonFunctions.$gt = function (a, b) {\n  return areComparable(a, b) && a > b;\n};\n\ncomparisonFunctions.$gte = function (a, b) {\n  return areComparable(a, b) && a >= b;\n};\n\ncomparisonFunctions.$ne = function (a, b) {\n  if (a === undefined) { return true; }\n  return !areThingsEqual(a, b);\n};\n\ncomparisonFunctions.$in = function (a, b) {\n  var i;\n\n  if (!util.isArray(b)) { throw new Error(\"$in operator called with a non-array\"); }\n\n  for (i = 0; i < b.length; i += 1) {\n    if (areThingsEqual(a, b[i])) { return true; }\n  }\n\n  return false;\n};\n\ncomparisonFunctions.$nin = function (a, b) {\n  if (!util.isArray(b)) { throw new Error(\"$nin operator called with a non-array\"); }\n\n  return !comparisonFunctions.$in(a, b);\n};\n\ncomparisonFunctions.$regex = function (a, b) {\n  if (!util.isRegExp(b)) { throw new Error(\"$regex operator called with non regular expression\"); }\n\n  if (typeof a !== 'string') {\n    return false\n  } else {\n    return b.test(a);\n  }\n};\n\ncomparisonFunctions.$exists = function (value, exists) {\n  if (exists || exists === '') {   // This will be true for all values of exists except false, null, undefined and 0\n    exists = true;                 // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n  } else {\n    exists = false;\n  }\n\n  if (value === undefined) {\n    return !exists\n  } else {\n    return exists;\n  }\n};\n\n// Specific to arrays\ncomparisonFunctions.$size = function (obj, value) {\n    if (!util.isArray(obj)) { return false; }\n    if (value % 1 !== 0) { throw new Error(\"$size operator called without an integer\"); }\n\n    return (obj.length == value);\n};\ncomparisonFunctions.$elemMatch = function (obj, value) {\n  if (!util.isArray(obj)) { return false; }\n  var i = obj.length;\n  var result = false;   // Initialize result\n  while (i--) {\n    if (match(obj[i], value)) {   // If match for array element, return true\n      result = true;\n      break;\n    }\n  }\n  return result;\n};\narrayComparisonFunctions.$size = true;\narrayComparisonFunctions.$elemMatch = true;\n\n\n/**\n * Match any of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$or = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$or operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (match(obj, query[i])) { return true; }\n  }\n\n  return false;\n};\n\n\n/**\n * Match all of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$and = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$and operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (!match(obj, query[i])) { return false; }\n  }\n\n  return true;\n};\n\n\n/**\n * Inverted match of the query\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$not = function (obj, query) {\n  return !match(obj, query);\n};\n\n\n/**\n * Use a function to match\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$where = function (obj, fn) {\n  var result;\n\n  if (!_.isFunction(fn)) { throw new Error(\"$where operator used without a function\"); }\n\n  result = fn.call(obj);\n  if (!_.isBoolean(result)) { throw new Error(\"$where function must return boolean\"); }\n\n  return result;\n};\n\n\n/**\n * Tell if a given document matches a query\n * @param {Object} obj Document to check\n * @param {Object} query\n */\nfunction match (obj, query) {\n  var queryKeys, queryKey, queryValue, i;\n\n  // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) {\n    return matchQueryPart({ needAKey: obj }, 'needAKey', query);\n  }\n\n  // Normal query\n  queryKeys = Object.keys(query);\n  for (i = 0; i < queryKeys.length; i += 1) {\n    queryKey = queryKeys[i];\n    queryValue = query[queryKey];\n\n    if (queryKey[0] === '$') {\n      if (!logicalOperators[queryKey]) { throw new Error(\"Unknown logical operator \" + queryKey); }\n      if (!logicalOperators[queryKey](obj, queryValue)) { return false; }\n    } else {\n      if (!matchQueryPart(obj, queryKey, queryValue)) { return false; }\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n */\nfunction matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {\n  var objValue = getDotValue(obj, queryKey)\n    , i, keys, firstChars, dollarFirstChars;\n\n  // Check if the value is an array if we don't force a treatment as value\n  if (util.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (util.isArray(queryValue)) {\n      return matchQueryPart(obj, queryKey, queryValue, true);\n    }\n\n    // Check if we are using an array-specific comparison function\n    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {\n      keys = Object.keys(queryValue);\n      for (i = 0; i < keys.length; i += 1) {\n        if (arrayComparisonFunctions[keys[i]]) { return matchQueryPart(obj, queryKey, queryValue, true); }\n      }\n    }\n\n    // If not, treat it as an array of { obj, query } where there needs to be at least one match\n    for (i = 0; i < objValue.length; i += 1) {\n      if (matchQueryPart({ k: objValue[i] }, 'k', queryValue)) { return true; }   // k here could be any string\n    }\n    return false;\n  }\n\n  // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {\n    keys = Object.keys(queryValue);\n    firstChars = _.map(keys, function (item) { return item[0]; });\n    dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; });\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n      throw new Error(\"You cannot mix operators and normal fields\");\n    }\n\n    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n    if (dollarFirstChars.length > 0) {\n      for (i = 0; i < keys.length; i += 1) {\n        if (!comparisonFunctions[keys[i]]) { throw new Error(\"Unknown comparison function \" + keys[i]); }\n\n        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) { return false; }\n      }\n      return true;\n    }\n  }\n\n  // Using regular expressions with basic querying\n  if (util.isRegExp(queryValue)) { return comparisonFunctions.$regex(objValue, queryValue); }\n\n  // queryValue is either a native value or a normal object\n  // Basic matching is possible\n  if (!areThingsEqual(objValue, queryValue)) { return false; }\n\n  return true;\n}\n\n\n// Interface\nmodule.exports.serialize = serialize;\nmodule.exports.deserialize = deserialize;\nmodule.exports.deepCopy = deepCopy;\nmodule.exports.checkObject = checkObject;\nmodule.exports.isPrimitiveType = isPrimitiveType;\nmodule.exports.modify = modify;\nmodule.exports.getDotValue = getDotValue;\nmodule.exports.match = match;\nmodule.exports.areThingsEqual = areThingsEqual;\nmodule.exports.compareThings = compareThings;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                }\n            }));\n        });\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor !== Array) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (test()) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (!test()) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if(data.constructor !== Array) {\n              data = [data];\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain) cargo.drain();\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.compose = function (/* functions... */) {\n        var fns = Array.prototype.reverse.call(arguments);\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // AMD / RequireJS\n    if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // Node.js\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid = require(\"uuid\").v1;\nclass Snap {\n    constructor(actor, index = 0, latestEventIndex = 0) {\n        this.index = index;\n        this.latestEventIndex = latestEventIndex;\n        this.id = uuid();\n        this.date = new Date();\n        this.actorId = actor.id;\n        this.actorType = actor.type;\n        this.data = actor.json;\n    }\n    get json() {\n        let { id, latestEventIndex, date, actorId, actorType, data, index } = this;\n        return { id, latestEventIndex, date, actorId, actorType, data, index };\n    }\n    static parse(data) {\n        let snap = JSON.parse(JSON.stringify(data));\n        snap.__proto__ = Snap.prototype;\n        return snap;\n    }\n}\nexports.default = Snap;\n//# sourceMappingURL=Snap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uncommittedEvents = Symbol.for('uncommittedEvents');\nconst loadEvents = Symbol.for('loadEvents');\nconst uuid = require('uuid').v1;\nexports.setdata = Symbol.for(\"setdata\");\nconst datakey = Symbol(\"datakey\");\nexports.isLock = Symbol.for(\"isLock\");\nclass Actor {\n    constructor(data = {}) {\n        this.lockData = { key: null, timeout: 2000, latestLockTime: new Date(), isLock: false };\n        this[uncommittedEvents] = [];\n        this[datakey] = data;\n        this[datakey].isAlive = true;\n        this[datakey].listeners = {};\n        if (!this[datakey].id) {\n            this[datakey].id = uuid();\n        }\n    }\n    get type() {\n        return this.constructor.getType();\n    }\n    set [exports.setdata](data) {\n        this[datakey] = data;\n    }\n    get id() {\n        return this.json.id;\n    }\n    static getType() {\n        return this.name;\n    }\n    get json() {\n        return this.constructor.toJSON(this);\n    }\n    get updater() {\n        throw new Error(\"please implements updater() Getter!\");\n    }\n    subscribe(event, listenerType, listenerId, handleMethodName) {\n        this.$({ event, listenerType, listenerId, handleMethodName });\n    }\n    unsubscribe(event, listenerId) {\n        this.$({ event, listenerId });\n    }\n    [exports.isLock](key) {\n        if (this.lockData.key) {\n            if (this.lockData.key === key) {\n                return false;\n            }\n            else {\n                return this.lockData.isLock && Date.now() - this.lockData.latestLockTime.getTime() < this.lockData.timeout;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    remove() {\n        this.$();\n    }\n    lock(data) {\n        if (this.lockData.key === data.key) {\n            return true;\n        }\n        if (this.lockData.isLock && Date.now() - this.lockData.latestLockTime.getTime() < this.lockData.timeout) {\n            return false;\n        }\n        else {\n            this.lockData.timeout = data.timeout || 200;\n            this.lockData.key = data.key;\n            this.lockData.isLock = true;\n            this.lockData.latestLockTime = new Date();\n            return true;\n        }\n    }\n    // todo\n    unlock(key) {\n        if (this.lockData.key === key) {\n            this.lockData.key = null;\n        }\n    }\n    static toJSON(actor) {\n        return JSON.parse(JSON.stringify(actor[datakey]));\n    }\n    static parse(json) {\n        return new this(json);\n    }\n}\nexports.default = Actor;\n//# sourceMappingURL=Actor.js.map","/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nfunction getRandomArray (n) {\n  var res, next;\n\n  if (n === 0) { return []; }\n  if (n === 1) { return [0]; }\n\n  res = getRandomArray(n - 1);\n  next = Math.floor(Math.random() * n);\n  res.splice(next, 0, n - 1);   // Add n-1 at a random position in the array\n\n  return res;\n};\nmodule.exports.getRandomArray = getRandomArray;\n\n\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\nfunction defaultCompareKeysFunction (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  if (a === b) { return 0; }\n\n  var err = new Error(\"Couldn't compare elements\");\n  err.a = a;\n  err.b = b;\n  throw err;\n}\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction;\n\n\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\nfunction defaultCheckValueEquality (a, b) {\n  return a === b;\n}\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality;\n","/**\n * Simple binary search tree\n */\nvar customUtils = require('./customUtils');\n\n\n/**\n * Constructor\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction BinarySearchTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n// ================================\n// Methods used to test the tree\n// ================================\n\n\n/**\n * Get the descendant with max key\n */\nBinarySearchTree.prototype.getMaxKeyDescendant = function () {\n  if (this.right) {\n    return this.right.getMaxKeyDescendant();\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the maximum key\n */\nBinarySearchTree.prototype.getMaxKey = function () {\n  return this.getMaxKeyDescendant().key;\n};\n\n\n/**\n * Get the descendant with min key\n */\nBinarySearchTree.prototype.getMinKeyDescendant = function () {\n  if (this.left) {\n    return this.left.getMinKeyDescendant()\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the minimum key\n */\nBinarySearchTree.prototype.getMinKey = function () {\n  return this.getMinKeyDescendant().key;\n};\n\n\n/**\n * Check that all nodes (incl. leaves) fullfil condition given by fn\n * test is a function passed every (key, data) and which throws if the condition is not met\n */\nBinarySearchTree.prototype.checkAllNodesFullfillCondition = function (test) {\n  if (!this.hasOwnProperty('key')) { return; }\n\n  test(this.key, this.data);\n  if (this.left) { this.left.checkAllNodesFullfillCondition(test); }\n  if (this.right) { this.right.checkAllNodesFullfillCondition(test); }\n};\n\n\n/**\n * Check that the core BST properties on node ordering are verified\n * Throw if they aren't\n */\nBinarySearchTree.prototype.checkNodeOrdering = function () {\n  var self = this;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.left) {\n    this.left.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) >= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.left.checkNodeOrdering();\n  }\n\n  if (this.right) {\n    this.right.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) <= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.right.checkNodeOrdering();\n  }\n};\n\n\n/**\n * Check that all pointers are coherent in this tree\n */\nBinarySearchTree.prototype.checkInternalPointers = function () {\n  if (this.left) {\n    if (this.left.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.left.checkInternalPointers();\n  }\n\n  if (this.right) {\n    if (this.right.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.right.checkInternalPointers();\n  }\n};\n\n\n/**\n * Check that a tree is a BST as defined here (node ordering and pointer references)\n */\nBinarySearchTree.prototype.checkIsBST = function () {\n  this.checkNodeOrdering();\n  this.checkInternalPointers();\n  if (this.parent) { throw new Error(\"The root shouldn't have a parent\"); }\n};\n\n\n/**\n * Get number of keys inserted\n */\nBinarySearchTree.prototype.getNumberOfKeys = function () {\n  var res;\n\n  if (!this.hasOwnProperty('key')) { return 0; }\n\n  res = 1;\n  if (this.left) { res += this.left.getNumberOfKeys(); }\n  if (this.right) { res += this.right.getNumberOfKeys(); }\n\n  return res;\n};\n\n\n\n// ============================================\n// Methods used to actually work on the tree\n// ============================================\n\n/**\n * Create a BST similar (i.e. same options except for key and value) to the current one\n * Use the same constructor (i.e. BinarySearchTree, AVLTree etc)\n * @param {Object} options see constructor\n */\nBinarySearchTree.prototype.createSimilar = function (options) {\n  options = options || {};\n  options.unique = this.unique;\n  options.compareKeys = this.compareKeys;\n  options.checkValueEquality = this.checkValueEquality;\n\n  return new this.constructor(options);\n};\n\n\n/**\n * Create the left child of this BST and return it\n */\nBinarySearchTree.prototype.createLeftChild = function (options) {\n  var leftChild = this.createSimilar(options);\n  leftChild.parent = this;\n  this.left = leftChild;\n\n  return leftChild;\n};\n\n\n/**\n * Create the right child of this BST and return it\n */\nBinarySearchTree.prototype.createRightChild = function (options) {\n  var rightChild = this.createSimilar(options);\n  rightChild.parent = this;\n  this.right = rightChild;\n\n  return rightChild;\n};\n\n\n/**\n * Insert a new element\n */\nBinarySearchTree.prototype.insert = function (key, value) {\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    return;\n  }\n\n  // Same key as root\n  if (this.compareKeys(this.key, key) === 0) {\n    if (this.unique) {\n      var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n      err.key = key;\n      err.errorType = 'uniqueViolated';\n      throw err;\n    } else {\n      this.data.push(value);\n    }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    // Insert in left subtree\n    if (this.left) {\n      this.left.insert(key, value);\n    } else {\n      this.createLeftChild({ key: key, value: value });\n    }\n  } else {\n    // Insert in right subtree\n    if (this.right) {\n      this.right.insert(key, value);\n    } else {\n      this.createRightChild({ key: key, value: value });\n    }\n  }\n};\n\n\n/**\n * Search for all data corresponding to a key\n */\nBinarySearchTree.prototype.search = function (key) {\n  if (!this.hasOwnProperty('key')) { return []; }\n\n  if (this.compareKeys(this.key, key) === 0) { return this.data; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) {\n      return this.left.search(key);\n    } else {\n      return [];\n    }\n  } else {\n    if (this.right) {\n      return this.right.search(key);\n    } else {\n      return [];\n    }\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches a lower bound\n */\nBinarySearchTree.prototype.getLowerBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$gt') && !query.hasOwnProperty('$gte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$gt') && query.hasOwnProperty('$gte')) {\n    if (self.compareKeys(query.$gte, query.$gt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n\n    if (self.compareKeys(query.$gte, query.$gt) > 0) {\n      return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$gt')) {\n    return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches an upper bound\n */\nBinarySearchTree.prototype.getUpperBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$lt') && !query.hasOwnProperty('$lte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$lt') && query.hasOwnProperty('$lte')) {\n    if (self.compareKeys(query.$lte, query.$lt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n\n    if (self.compareKeys(query.$lte, query.$lt) < 0) {\n      return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$lt')) {\n    return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n  }\n};\n\n\n// Append all elements in toAppend to array\nfunction append (array, toAppend) {\n  var i;\n\n  for (i = 0; i < toAppend.length; i += 1) {\n    array.push(toAppend[i]);\n  }\n}\n\n\n/**\n * Get all data for a key between bounds\n * Return it in key order\n * @param {Object} query Mongo-style query where keys are $lt, $lte, $gt or $gte (other keys are not considered)\n * @param {Functions} lbm/ubm matching functions calculated at the first recursive step\n */\nBinarySearchTree.prototype.betweenBounds = function (query, lbm, ubm) {\n  var res = [];\n\n  if (!this.hasOwnProperty('key')) { return []; }   // Empty tree\n\n  lbm = lbm || this.getLowerBoundMatcher(query);\n  ubm = ubm || this.getUpperBoundMatcher(query);\n\n  if (lbm(this.key) && this.left) { append(res, this.left.betweenBounds(query, lbm, ubm)); }\n  if (lbm(this.key) && ubm(this.key)) { append(res, this.data); }\n  if (ubm(this.key) && this.right) { append(res, this.right.betweenBounds(query, lbm, ubm)); }\n\n  return res;\n};\n\n\n/**\n * Delete the current node if it is a leaf\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfLeaf = function () {\n  if (this.left || this.right) { return false; }\n\n  // The leaf is itself a root\n  if (!this.parent) {\n    delete this.key;\n    this.data = [];\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = null;\n  } else {\n    this.parent.right = null;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete the current node if it has only one child\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfOnlyOneChild = function () {\n  var child;\n\n  if (this.left && !this.right) { child = this.left; }\n  if (!this.left && this.right) { child = this.right; }\n  if (!child) { return false; }\n\n  // Root\n  if (!this.parent) {\n    this.key = child.key;\n    this.data = child.data;\n\n    this.left = null;\n    if (child.left) {\n      this.left = child.left;\n      child.left.parent = this;\n    }\n\n    this.right = null;\n    if (child.right) {\n      this.right = child.right;\n      child.right.parent = this;\n    }\n\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = child;\n    child.parent = this.parent;\n  } else {\n    this.parent.right = child;\n    child.parent = this.parent;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete a key or just a value\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\nBinarySearchTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    ;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) { this.left.delete(key, value); }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) > 0) {\n    if (this.right) { this.right.delete(key, value); }\n    return;\n  }\n\n  if (!this.compareKeys(key, this.key) === 0) { return; }\n\n  // Delete only a value\n  if (this.data.length > 1 && value !== undefined) {\n    this.data.forEach(function (d) {\n      if (!self.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    self.data = newData;\n    return;\n  }\n\n  // Delete the whole node\n  if (this.deleteIfLeaf()) {\n    return;\n  }\n  if (this.deleteIfOnlyOneChild()) {\n    return;\n  }\n\n  // We are in the case where the node to delete has two children\n  if (Math.random() >= 0.5) {   // Randomize replacement to avoid unbalancing the tree too much\n    // Use the in-order predecessor\n    replaceWith = this.left.getMaxKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.left = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.right = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    }\n  } else {\n    // Use the in-order successor\n    replaceWith = this.right.getMinKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.right = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.left = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    }\n  }\n};\n\n\n/**\n * Execute a function on every node of the tree, in key order\n * @param {Function} fn Signature: node. Most useful will probably be node.key and node.data\n */\nBinarySearchTree.prototype.executeOnEveryNode = function (fn) {\n  if (this.left) { this.left.executeOnEveryNode(fn); }\n  fn(this);\n  if (this.right) { this.right.executeOnEveryNode(fn); }\n};\n\n\n/**\n * Pretty print a tree\n * @param {Boolean} printData To print the nodes' data along with the key\n */\nBinarySearchTree.prototype.prettyPrint = function (printData, spacing) {\n  spacing = spacing || \"\";\n\n  console.log(spacing + \"* \" + this.key);\n  if (printData) { console.log(spacing + \"* \" + this.data); }\n\n  if (!this.left && !this.right) { return; }\n\n  if (this.left) {\n    this.left.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n  if (this.right) {\n    this.right.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n};\n\n\n\n\n// Interface\nmodule.exports = BinarySearchTree;\n","var BinarySearchTree = require('binary-search-tree').AVLTree\n  , model = require('./model')\n  , _ = require('underscore')\n  , util = require('util')\n  ;\n\n/**\n * Two indexed pointers are equal iif they point to the same place\n */\nfunction checkValueEquality (a, b) {\n  return a === b;\n}\n\n/**\n * Type-aware projection\n */\nfunction projectForUnique (elt) {\n  if (elt === null) { return '$null'; }\n  if (typeof elt === 'string') { return '$string' + elt; }\n  if (typeof elt === 'boolean') { return '$boolean' + elt; }\n  if (typeof elt === 'number') { return '$number' + elt; }\n  if (util.isArray(elt)) { return '$date' + elt.getTime(); }\n\n  return elt;   // Arrays and objects, will check for pointer equality\n}\n\n\n/**\n * Create a new index\n * All methods on an index guarantee that either the whole operation was successful and the index changed\n * or the operation was unsuccessful and an error is thrown while the index is unchanged\n * @param {String} options.fieldName On which field should the index apply (can use dot notation to index on sub fields)\n * @param {Boolean} options.unique Optional, enforce a unique constraint (default: false)\n * @param {Boolean} options.sparse Optional, allow a sparse index (we can have documents for which fieldName is undefined) (default: false)\n */\nfunction Index (options) {\n  this.fieldName = options.fieldName;\n  this.unique = options.unique || false;\n  this.sparse = options.sparse || false;\n\n  this.treeOptions = { unique: this.unique, compareKeys: model.compareThings, checkValueEquality: checkValueEquality };\n\n  this.reset();   // No data in the beginning\n}\n\n\n/**\n * Reset an index\n * @param {Document or Array of documents} newData Optional, data to initialize the index with\n *                                                 If an error is thrown during insertion, the index is not modified\n */\nIndex.prototype.reset = function (newData) {\n  this.tree = new BinarySearchTree(this.treeOptions);\n\n  if (newData) { this.insert(newData); }\n};\n\n\n/**\n * Insert a new document in the index\n * If an array is passed, we insert all its elements (if one insertion fails the index is not modified)\n * O(log(n))\n */\nIndex.prototype.insert = function (doc) {\n  var key, self = this\n    , keys, i, failingI, error\n    ;\n\n  if (util.isArray(doc)) { this.insertMultipleDocs(doc); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  // We don't index documents that don't contain the field if the index is sparse\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.insert(key, doc);\n  } else {\n    // If an insert fails due to a unique constraint, roll back all inserts before it\n    keys = _.uniq(key, projectForUnique);\n\n    for (i = 0; i < keys.length; i += 1) {\n      try {\n        this.tree.insert(keys[i], doc);\n      } catch (e) {\n        error = e;\n        failingI = i;\n        break;\n      }\n    }\n\n    if (error) {\n      for (i = 0; i < failingI; i += 1) {\n        this.tree.delete(keys[i], doc);\n      }\n\n      throw error;\n    }\n  }\n};\n\n\n/**\n * Insert an array of documents in the index\n * If a constraint is violated, the changes should be rolled back and an error thrown\n *\n * @API private\n */\nIndex.prototype.insertMultipleDocs = function (docs) {\n  var i, error, failingI;\n\n  for (i = 0; i < docs.length; i += 1) {\n    try {\n      this.insert(docs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(docs[i]);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove a document from the index\n * If an array is passed, we remove all its elements\n * The remove operation is safe with regards to the 'unique' constraint\n * O(log(n))\n */\nIndex.prototype.remove = function (doc) {\n  var key, self = this;\n\n  if (util.isArray(doc)) { doc.forEach(function (d) { self.remove(d); }); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.delete(key, doc);\n  } else {\n    _.uniq(key, projectForUnique).forEach(function (_key) {\n      self.tree.delete(_key, doc);\n    });\n  }\n};\n\n\n/**\n * Update a document in the index\n * If a constraint is violated, changes are rolled back and an error thrown\n * Naive implementation, still in O(log(n))\n */\nIndex.prototype.update = function (oldDoc, newDoc) {\n  if (util.isArray(oldDoc)) { this.updateMultipleDocs(oldDoc); return; }\n\n  this.remove(oldDoc);\n\n  try {\n    this.insert(newDoc);\n  } catch (e) {\n    this.insert(oldDoc);\n    throw e;\n  }\n};\n\n\n/**\n * Update multiple documents in the index\n * If a constraint is violated, the changes need to be rolled back\n * and an error thrown\n * @param {Array of oldDoc, newDoc pairs} pairs\n *\n * @API private\n */\nIndex.prototype.updateMultipleDocs = function (pairs) {\n  var i, failingI, error;\n\n  for (i = 0; i < pairs.length; i += 1) {\n    this.remove(pairs[i].oldDoc);\n  }\n\n  for (i = 0; i < pairs.length; i += 1) {\n    try {\n      this.insert(pairs[i].newDoc);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  // If an error was raised, roll back changes in the inverse order\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(pairs[i].newDoc);\n    }\n\n    for (i = 0; i < pairs.length; i += 1) {\n      this.insert(pairs[i].oldDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Revert an update\n */\nIndex.prototype.revertUpdate = function (oldDoc, newDoc) {\n  var revert = [];\n\n  if (!util.isArray(oldDoc)) {\n    this.update(newDoc, oldDoc);\n  } else {\n    oldDoc.forEach(function (pair) {\n      revert.push({ oldDoc: pair.newDoc, newDoc: pair.oldDoc });\n    });\n    this.update(revert);\n  }\n};\n\n\n/**\n * Get all documents in index whose key match value (if it is a Thing) or one of the elements of value (if it is an array of Things)\n * @param {Thing} value Value to match the key against\n * @return {Array of documents}\n */\nIndex.prototype.getMatching = function (value) {\n  var self = this;\n\n  if (!util.isArray(value)) {\n    return self.tree.search(value);\n  } else {\n    var _res = {}, res = [];\n\n    value.forEach(function (v) {\n      self.getMatching(v).forEach(function (doc) {\n        _res[doc._id] = doc;\n      });\n    });\n\n    Object.keys(_res).forEach(function (_id) {\n      res.push(_res[_id]);\n    });\n\n    return res;\n  }\n};\n\n\n/**\n * Get all documents in index whose key is between bounds are they are defined by query\n * Documents are sorted by key\n * @param {Query} query\n * @return {Array of documents}\n */\nIndex.prototype.getBetweenBounds = function (query) {\n  return this.tree.betweenBounds(query);\n};\n\n\n/**\n * Get all elements in the index\n * @return {Array of documents}\n */\nIndex.prototype.getAll = function () {\n  var res = [];\n\n  this.tree.executeOnEveryNode(function (node) {\n    var i;\n\n    for (i = 0; i < node.data.length; i += 1) {\n      res.push(node.data[i]);\n    }\n  });\n\n  return res;\n};\n\n\n\n\n// Interface\nmodule.exports = Index;\n","/**\n * Specific customUtils for the browser, where we don't have access to the Crypto and Buffer modules\n */\n\n/**\n * Taken from the crypto-browserify module\n * https://github.com/dominictarr/crypto-browserify\n * NOTE: Math.random() does not guarantee \"cryptographic quality\" but we actually don't need it\n */\nfunction randomBytes (size) {\n  var bytes = new Array(size);\n  var r;\n\n  for (var i = 0, r; i < size; i++) {\n    if ((i & 0x03) == 0) r = Math.random() * 0x100000000;\n    bytes[i] = r >>> ((i & 0x03) << 3) & 0xff;\n  }\n\n  return bytes;\n}\n\n\n/**\n * Taken from the base64-js module\n * https://github.com/beatgammit/base64-js/\n */\nfunction byteArrayToBase64 (uint8) {\n  var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    , extraBytes = uint8.length % 3   // if we have 1 byte left, pad 2 bytes\n    , output = \"\"\n    , temp, length, i;\n\n  function tripletToBase64 (num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n  };\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n    temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output += tripletToBase64(temp);\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  switch (extraBytes) {\n    case 1:\n      temp = uint8[uint8.length - 1];\n      output += lookup[temp >> 2];\n      output += lookup[(temp << 4) & 0x3F];\n      output += '==';\n      break;\n    case 2:\n      temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\n      output += lookup[temp >> 10];\n      output += lookup[(temp >> 4) & 0x3F];\n      output += lookup[(temp << 2) & 0x3F];\n      output += '=';\n      break;\n  }\n\n  return output;\n}\n\n\n/**\n * Return a random alphanumerical string of length len\n * There is a very small probability (less than 1/1,000,000) for the length to be less than len\n * (il the base64 conversion yields too many pluses and slashes) but\n * that's not an issue here\n * The probability of a collision is extremely small (need 3*10^12 documents to have one chance in a million of a collision)\n * See http://en.wikipedia.org/wiki/Birthday_problem\n */\nfunction uid (len) {\n  return byteArrayToBase64(randomBytes(Math.ceil(Math.max(8, len * 2)))).replace(/[+\\/]/g, '').slice(0, len);\n}\n\n\n\nmodule.exports.uid = uid;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Event_1 = require(\"./Event\");\nfunction getAlias(event) {\n    if (event instanceof Event_1.default) {\n        return [\n            `${event.actorType}.${event.actorId}.${event.type}.${event.method}.${event.sagaId}`,\n            `${event.actorType}.${event.actorId}.${event.type}.${event.method}.`,\n            `${event.actorType}.${event.actorId}.${event.type}..`,\n            `${event.actorType}.${event.actorId}...`,\n            `${event.actorType}..${event.type}..`,\n            `..${event.type}..`,\n            `${event.actorType}....`,\n            \"....\"\n        ];\n    }\n    else {\n        return `${event.actorType || \"\"}.${event.actorId || \"\"}.${event.type || \"\"}.${event.method || \"\"}.${event.sagaId || \"\"}`;\n    }\n}\nexports.getAlias = getAlias;\n//# sourceMappingURL=eventAlias.js.map","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Service_1 = require(\"./Service\");\nconst eventAlias_1 = require(\"./eventAlias\");\nconst Event_1 = require(\"./Event\");\nconst Repository_1 = require(\"./Repository\");\nconst DefaultEventStore_1 = require(\"./DefaultEventStore\");\nconst EventBus_1 = require(\"./EventBus\");\nconst isLock = Symbol.for(\"isLock\");\nconst debug = require('debug')('domain');\nconst uid = require(\"uuid\").v1;\nexports.getActorProxy = Symbol.for(\"getActorProxy\");\nconst Role_1 = require(\"./Role\");\nconst ActorEventEmitter_1 = require(\"./ActorEventEmitter\");\n// import IDManager from \"./cluster/IDManager\";\nclass Domain {\n    constructor(options = {}) {\n        this.roleMap = new Map();\n        this.id = uid();\n        this.ActorClassMap = new Map();\n        this.eventstore = options.eventstore || (options.EventStore ? new options.EventStore : new DefaultEventStore_1.default());\n        this.repositorieMap = new Map();\n        this.eventbus = options.EventBus ?\n            new options.EventBus(this.eventstore, this, this.repositorieMap, this.ActorClassMap) :\n            new EventBus_1.default(this.eventstore, this, this.repositorieMap, this.ActorClassMap);\n        this.register(ActorEventEmitter_1.default);\n        // .register(IDManager);\n    }\n    // todo\n    use(plugin) {\n        plugin(this);\n        return this;\n    }\n    async getNativeActor(type, id) {\n        const roles = type.split(\".\");\n        const actorType = roles.shift();\n        let repo = this.repositorieMap.get(this.ActorClassMap.get(actorType));\n        const actor = await repo.get(id);\n        let result;\n        if (roles.length) {\n            for (let role of roles) {\n                result = this.roleMap.get(role).wrap(result || actor);\n            }\n        }\n        return result || actor;\n    }\n    async nativeCreateActor(type, data) {\n        const actorType = type.split(\".\").shift();\n        const ActorClass = this.ActorClassMap.get(actorType);\n        const repo = this.repositorieMap.get(ActorClass);\n        if (ActorClass.createBefor) {\n            try {\n                data = (await ActorClass.createBefor(data, this)) || data;\n            }\n            catch (err) {\n                throw err;\n            }\n        }\n        const actorId = (await repo.create(data)).json.id;\n        const actor = await this[exports.getActorProxy](type, actorId);\n        return actor;\n    }\n    async [exports.getActorProxy](type, id, sagaId, key) {\n        const that = this;\n        let actor = await this.getNativeActor(type, id);\n        if (!actor) {\n            return null;\n        }\n        let roles;\n        if (Array.isArray(actor)) {\n            roles = actor[1];\n            actor = actor[0];\n        }\n        const proxy = new Proxy(actor, {\n            get(target, prop) {\n                if (prop === \"then\") {\n                    return proxy;\n                }\n                ;\n                if (\"lock\" === prop || \"lockData\" === prop) {\n                    return Reflect.get(target, prop);\n                }\n                let member = actor[prop];\n                let roleName;\n                let role;\n                if (prop === \"json\" || prop === \"id\") {\n                    return member;\n                }\n                else {\n                    if (!member) {\n                        if (roles) {\n                            for (let rn in roles) {\n                                role = roles[rn];\n                                member = role.methods[prop];\n                                roleName = rn;\n                                if (member)\n                                    break;\n                            }\n                        }\n                        else\n                            return;\n                    }\n                    if (typeof member === \"function\") {\n                        if (prop in Object.prototype)\n                            return undefined;\n                        return new Proxy(member, {\n                            apply(target, cxt, args) {\n                                return new Promise(function (resolve, reject) {\n                                    function run() {\n                                        const islock = actor[isLock](key);\n                                        if (islock) {\n                                            setTimeout(run, 2000);\n                                        }\n                                        else {\n                                            const iservice = new Service_1.default(actor, that.eventbus, that.repositorieMap.get(that.ActorClassMap.get(actor.type)), (type, id, sagaId, key) => that[exports.getActorProxy](type, id, sagaId, key), (type, data) => that.nativeCreateActor(type, data), prop, sagaId, roleName, role);\n                                            const service = new Proxy(function service(type, data) {\n                                                if (arguments.length === 0) {\n                                                    type = prop;\n                                                    data = null;\n                                                }\n                                                else if (arguments.length === 1) {\n                                                    data = type;\n                                                    type = prop;\n                                                }\n                                                return iservice.apply(type, data);\n                                            }, {\n                                                get(target, prop) {\n                                                    return iservice[prop].bind(iservice);\n                                                }\n                                            });\n                                            cxt = { service, $: service };\n                                            cxt.__proto__ = proxy;\n                                            let result;\n                                            try {\n                                                result = target.call(cxt, ...args);\n                                            }\n                                            catch (err) {\n                                                that.eventbus.rollback(sagaId || iservice.sagaId).then(r => reject(err));\n                                                return;\n                                            }\n                                            if (result instanceof Promise) {\n                                                result.then(result => {\n                                                    resolve(result);\n                                                }).catch(err => {\n                                                    that.eventbus.rollback(sagaId || iservice.sagaId).then(r => reject(err));\n                                                });\n                                            }\n                                            else {\n                                                resolve(result);\n                                            }\n                                        }\n                                    }\n                                    run();\n                                });\n                            }\n                        });\n                    }\n                    else\n                        return undefined;\n                }\n            }\n        });\n        return proxy;\n    }\n    register(Classes) {\n        if (!Array.isArray(Classes)) {\n            Classes = [Classes];\n        }\n        for (let Class of Classes) {\n            const type = Class.getType();\n            if (!type)\n                throw new Error(\"please implements Actor.getType!\");\n            this.ActorClassMap.set(type, Class);\n            const repo = new Repository_1.default(Class, this.eventstore, this.roleMap);\n            repo.on(\"create\", json => {\n                let event = new Event_1.default({ id: json.id, type: Class.getType() }, json, \"create\", \"create\");\n                const alias = eventAlias_1.getAlias(event);\n                for (let name of alias) {\n                    this.eventbus.emitter.emit(name, event);\n                }\n            });\n            this.repositorieMap.set(Class, repo);\n        }\n        return this;\n    }\n    async create(type, data) {\n        return await this.nativeCreateActor(type, data);\n    }\n    async get(type, id) {\n        return await this[exports.getActorProxy](type, id);\n    }\n    on(event, handle) {\n        this.eventbus.on(event, handle);\n    }\n    once(event, handle) {\n        this.eventbus.on(event, handle);\n    }\n    getCacheActorIds() {\n        let result = [];\n        for (let [key, Actor] of this.ActorClassMap) {\n            result = result.concat(this.repositorieMap.get(Actor).getCacheActorIds());\n        }\n        return result;\n    }\n    addRole(name, supportedActorNames, methods, updater) {\n        if (typeof name !== \"string\") {\n            supportedActorNames = name.types;\n            methods = name.methods;\n            updater = name.updater;\n            name = name.name;\n        }\n        if (this.roleMap.has(name))\n            throw new Error(name + \" role is exist. \");\n        this.roleMap.set(name, new Role_1.default(name, supportedActorNames, methods, updater));\n        return this;\n    }\n}\nexports.default = Domain;\n//# sourceMappingURL=Domain.js.map","import {domain} from '../..';\nimport {User} from \"./User\";\nimport {UserManager} from \"./UserManager\";\n\nexport default domain.register(User).register(UserManager);\n","import {Actor} from '../..';\n\n\nexport class User extends Actor {\n\n   static getType(){\n     return 'User';\n   }\n\n   constructor(data){\n     super(data);\n   }\n\n   changename(name){\n     this.$(name);\n   }\n\n   updater(){\n     return {\n       changename(json,event){\n         return {name:event.data}\n       }\n     }\n   }\n\n}\n","import {Actor} from '../..';\n\nexport class UserManager extends Actor {\n\n   static getType(){\n     return 'UserManager';\n   }\n\n   constructor(data){\n     super({\n       start:false\n     });\n   }\n\n   listen(){\n     if(!this.json.start) {\n       this.$();\n       this.$.subscribe({actorType:'User'},\"handle\");\n     }\n   }\n\n   handle(event){\n     console.log(event);\n   }\n\n   updater(){\n     return {\n       listen(json,event){\n         return {start:true}\n       }\n     }\n   }\n\n}\n","import domain from './domain';\n\n\n\nlet run = async ()=> {\n  const manager = await domain.create(\"UserManager\");\n  await manager.listen();\n  const actor = await domain.create(\"User\",{name:\"leo\"});\n  document.body.innerHTML = `\n    <h4>${actor.json.id + actor.json.name}</h4>\n  `\n}\n\nrun();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Actor_1 = require(\"./Actor\");\nclass ActorEventEmitter extends Actor_1.default {\n    constructor(data) {\n        super(data);\n    }\n    static getType() {\n        return 'ActorEventEmitter';\n    }\n    async publish(event) {\n        let json = this.json;\n        let map = json[event.actorType];\n        for (let listenerId in map) {\n            let listener = map[listenerId];\n            let { listenerType, handleMethodName } = listener;\n            listener = await this.service.get(listenerType, listenerId);\n            if (listener) {\n                await listener[handleMethodName](event);\n            }\n        }\n    }\n    subscribe(actorType, listenerType, listenerId, handleMethodName) {\n        this.service.apply(\"_subscribe\", { actorType, listenerType, listenerId, handleMethodName });\n    }\n    unsubscribe(actorType, listenerId) {\n        this.service.apply(\"_unsubscribe\", { actorType, listenerId });\n    }\n    get updater() {\n        return {\n            _subscribe(json, event) {\n                let data = event.data;\n                let listenerMap = json[data.actorType] || {};\n                listenerMap[data.listenerId] = data;\n                return { [data.actorType]: listenerMap };\n            },\n            _unsubscribe(json, event) {\n                let data = event.data;\n                let listenerMap = json[data.actorType] || {};\n                delete listenerMap[data.listenerId];\n                return { [data.actorType]: listenerMap };\n            }\n        };\n    }\n}\nexports.default = ActorEventEmitter;\n//# sourceMappingURL=ActorEventEmitter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Role {\n    constructor(name, supportedActorNames, methods, updater = {}) {\n        this.name = name;\n        this.supportedActorNames = supportedActorNames;\n        this.methods = methods;\n        this.updater = updater;\n    }\n    // [actor , {roleA, roleB} ]\n    wrap(actor) {\n        if (Array.isArray(actor)) {\n            const act = actor[0];\n            if (!this.supportedActorNames.includes(act.type))\n                throw new Error(this.name + \"role don't support \" + act.type + \" actor.\");\n            const roles = actor[1];\n            roles[this.name] = this;\n            return actor;\n        }\n        else {\n            return [actor, { [this.name]: this }];\n        }\n    }\n}\nexports.default = Role;\n//# sourceMappingURL=Role.js.map","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nconst eventAlias_1 = require(\"./eventAlias\");\nconst Snap_1 = require(\"./Snap\");\nconst uncommittedEvents = Symbol.for(\"uncommittedEvents\");\nclass EventBus {\n    constructor(eventstore, domain, repositorieMap, ActorClassMap) {\n        // for (let [ActorClass, repo] of repositorieMap) {\n        //     repo.on(\"create\", json => {\n        //         const alias = getAlias({ type: \"create\", actorType: ActorClass.getType(), actorId: json.id });\n        //         for (let name of alias) {\n        //             this.emitter.emit(name, json);\n        //         }\n        //     });\n        // }\n        this.eventstore = eventstore;\n        this.domain = domain;\n        this.repositorieMap = repositorieMap;\n        this.ActorClassMap = ActorClassMap;\n        this.emitter = new events_1.EventEmitter();\n        this.lockSet = new Set();\n        this.subscribeRepo = new Map();\n        this.eventstore.on(\"saved events\", events => {\n            for (let event of events) {\n                const alias = eventAlias_1.getAlias(event);\n                for (let name of alias) {\n                    process.nextTick(() => {\n                        this.emitter.emit(name, event);\n                        const s = this.subscribeRepo.get(name);\n                        if (s) {\n                            for (let handle of s) {\n                                this.domain.get(handle.actorType, handle.actorId).then(actor => {\n                                    actor[handle.method](event);\n                                });\n                            }\n                        }\n                        this.subscribeRepo.delete(name);\n                    });\n                }\n            }\n        });\n    }\n    once(event, cb) {\n        return new Promise((resolve, reject) => {\n            this.emitter.once(eventAlias_1.getAlias(event), function (event) {\n                resolve(event);\n                if (cb) {\n                    setImmediate(() => cb(event));\n                }\n            });\n        });\n    }\n    on(event, cb) {\n        this.emitter.on(eventAlias_1.getAlias(event), function (event) {\n            cb(event);\n        });\n    }\n    async publish(actor) {\n        if (this.lockSet.has(actor.id)) {\n            return;\n        }\n        else {\n            this.lockSet.add(actor.id);\n        }\n        const event = await this.eventstore.getLatestEvent(actor.id);\n        let startIndex = event ? event.index + 1 : 0;\n        let events = actor[uncommittedEvents].map(function (evt, index) {\n            evt.index = index + startIndex;\n            return evt;\n        });\n        await this.eventstore.saveEvents(events);\n        actor[uncommittedEvents] = [];\n        let snap = await this.eventstore.getLatestSnapshot(actor.id);\n        let lastEvent = events[events.length - 1];\n        if (lastEvent.index - snap.lastEventId > 10) {\n            let latestEventIndex = lastEvent.index;\n            let index = snap.index + 1;\n            let newSnap = new Snap_1.default(actor, index, latestEventIndex);\n            await this.eventstore.createSnap(newSnap);\n        }\n        this.lockSet.delete(actor.id);\n        if (actor[uncommittedEvents].length) {\n            await this.publish(actor);\n        }\n    }\n    async rollback(sagaId) {\n        await this.eventstore.killSaga(sagaId);\n        const events = await this.eventstore.findEventsBySagaId(sagaId);\n        await this.eventstore.removeEventsBySagaId(sagaId);\n        events.forEach(event => {\n            const Class = this.ActorClassMap.get(event.actorType);\n            const repo = this.repositorieMap.get(Class);\n            repo.clear(event.actorId);\n        });\n    }\n}\nexports.default = EventBus;\n//# sourceMappingURL=EventBus.js.map","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","\"use strict\"\n    // global key for user preferred registration\nvar REGISTRATION_KEY = '@@any-promise/REGISTRATION',\n    // Prior registration (preferred or detected)\n    registered = null\n\n/**\n * Registers the given implementation.  An implementation must\n * be registered prior to any call to `require(\"any-promise\")`,\n * typically on application load.\n *\n * If called with no arguments, will return registration in\n * following priority:\n *\n * For Node.js:\n *\n * 1. Previous registration\n * 2. global.Promise if node.js version >= 0.12\n * 3. Auto detected promise based on first sucessful require of\n *    known promise libraries. Note this is a last resort, as the\n *    loaded library is non-deterministic. node.js >= 0.12 will\n *    always use global.Promise over this priority list.\n * 4. Throws error.\n *\n * For Browser:\n *\n * 1. Previous registration\n * 2. window.Promise\n * 3. Throws error.\n *\n * Options:\n *\n * Promise: Desired Promise constructor\n * global: Boolean - Should the registration be cached in a global variable to\n * allow cross dependency/bundle registration?  (default true)\n */\nmodule.exports = function(root, loadImplementation){\n  return function register(implementation, opts){\n    implementation = implementation || null\n    opts = opts || {}\n    // global registration unless explicitly  {global: false} in options (default true)\n    var registerGlobal = opts.global !== false;\n\n    // load any previous global registration\n    if(registered === null && registerGlobal){\n      registered = root[REGISTRATION_KEY] || null\n    }\n\n    if(registered !== null\n        && implementation !== null\n        && registered.implementation !== implementation){\n      // Throw error if attempting to redefine implementation\n      throw new Error('any-promise already defined as \"'+registered.implementation+\n        '\".  You can only register an implementation before the first '+\n        ' call to require(\"any-promise\") and an implementation cannot be changed')\n    }\n\n    if(registered === null){\n      // use provided implementation\n      if(implementation !== null && typeof opts.Promise !== 'undefined'){\n        registered = {\n          Promise: opts.Promise,\n          implementation: implementation\n        }\n      } else {\n        // require implementation if implementation is specified but not provided\n        registered = loadImplementation(implementation)\n      }\n\n      if(registerGlobal){\n        // register preference globally in case multiple installations\n        root[REGISTRATION_KEY] = registered\n      }\n    }\n\n    return registered\n  }\n}\n","\"use strict\";\nmodule.exports = require('./loader')(window, loadImplementation)\n\n/**\n * Browser specific loadImplementation.  Always uses `window.Promise`\n *\n * To register a custom implementation, must register with `Promise` option.\n */\nfunction loadImplementation(){\n  if(typeof window.Promise === 'undefined'){\n    throw new Error(\"any-promise browser requires a polyfill or explicit registration\"+\n      \" e.g: require('any-promise/register/bluebird')\")\n  }\n  return {\n    Promise: window.Promise,\n    implementation: 'window.Promise'\n  }\n}\n","module.exports = require('./register')().Promise\n","\nvar Promise = require('any-promise')\nvar assert = require('assert')\n\nmodule.exports = thenify\n\n/**\n * Turn async functions into promises\n *\n * @param {Function} $$__fn__$$\n * @return {Function}\n * @api public\n */\n\nfunction thenify($$__fn__$$, options) {\n  assert(typeof $$__fn__$$ === 'function')\n  return eval(createWrapper($$__fn__$$.name, options))\n}\n\n/**\n * Turn async functions into promises and backward compatible with callback\n *\n * @param {Function} $$__fn__$$\n * @return {Function}\n * @api public\n */\n\nthenify.withCallback = function ($$__fn__$$, options) {\n  assert(typeof $$__fn__$$ === 'function')\n  options = options || {}\n  options.withCallback = true\n  if (options.multiArgs === undefined) options.multiArgs = true\n  return eval(createWrapper($$__fn__$$.name, options))\n}\n\nfunction createCallback(resolve, reject, multiArgs) {\n  return function(err, value) {\n    if (err) return reject(err)\n    var length = arguments.length\n\n    if (length <= 2 || !multiArgs) return resolve(value)\n\n    if (Array.isArray(multiArgs)) {\n      var values = {}\n      for (var i = 1; i < length; i++) values[multiArgs[i - 1]] = arguments[i]\n      return resolve(values)\n    }\n\n    var values = new Array(length - 1)\n    for (var i = 1; i < length; ++i) values[i - 1] = arguments[i]\n    resolve(values)\n  }\n}\n\nfunction createWrapper(name, options) {\n  name = (name || '').replace(/\\s|bound(?!$)/g, '')\n  options = options || {}\n  // default to true\n  var multiArgs = options.multiArgs !== undefined ? options.multiArgs : true\n  multiArgs = 'var multiArgs = ' + JSON.stringify(multiArgs) + '\\n'\n\n  var withCallback = options.withCallback ?\n    'var lastType = typeof arguments[len - 1]\\n'\n    + 'if (lastType === \"function\") return $$__fn__$$.apply(self, arguments)\\n'\n   : ''\n\n  return '(function ' + name + '() {\\n'\n    + 'var self = this\\n'\n    + 'var len = arguments.length\\n'\n    + multiArgs\n    + withCallback\n    + 'var args = new Array(len + 1)\\n'\n    + 'for (var i = 0; i < len; ++i) args[i] = arguments[i]\\n'\n    + 'var lastIndex = i\\n'\n    + 'return new Promise(function (resolve, reject) {\\n'\n      + 'args[lastIndex] = createCallback(resolve, reject, multiArgs)\\n'\n      + '$$__fn__$$.apply(self, args)\\n'\n    + '})\\n'\n  + '})'\n}\n","/**\n * Manage access to data, be it to find, update or remove it\n */\nvar model = require('./model')\n  , _ = require('underscore')\n  ;\n\n\n\n/**\n * Create a new cursor for this collection\n * @param {Datastore} db - The datastore this cursor is bound to\n * @param {Query} query - The query this cursor will operate on\n * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n */\nfunction Cursor (db, query, execFn) {\n  this.db = db;\n  this.query = query || {};\n  if (execFn) { this.execFn = execFn; }\n}\n\n\n/**\n * Set a limit to the number of results\n */\nCursor.prototype.limit = function(limit) {\n  this._limit = limit;\n  return this;\n};\n\n\n/**\n * Skip a the number of results\n */\nCursor.prototype.skip = function(skip) {\n  this._skip = skip;\n  return this;\n};\n\n\n/**\n * Sort results of the query\n * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n */\nCursor.prototype.sort = function(sortQuery) {\n  this._sort = sortQuery;\n  return this;\n};\n\n\n/**\n * Add the use of a projection\n * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits\n */\nCursor.prototype.projection = function(projection) {\n  this._projection = projection;\n  return this;\n};\n\n\n/**\n * Apply the projection\n */\nCursor.prototype.project = function (candidates) {\n  var res = [], self = this\n    , keepId, action, keys\n    ;\n\n  if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n    return candidates;\n  }\n\n  keepId = this._projection._id === 0 ? false : true;\n  this._projection = _.omit(this._projection, '_id');\n\n  // Check for consistency\n  keys = Object.keys(this._projection);\n  keys.forEach(function (k) {\n    if (action !== undefined && self._projection[k] !== action) { throw new Error(\"Can't both keep and omit fields except for _id\"); }\n    action = self._projection[k];\n  });\n\n  // Do the actual projection\n  candidates.forEach(function (candidate) {\n    var toPush;\n    if (action === 1) {   // pick-type projection\n      toPush = { $set: {} };\n      keys.forEach(function (k) {\n        toPush.$set[k] = model.getDotValue(candidate, k);\n        if (toPush.$set[k] === undefined) { delete toPush.$set[k]; }\n      });\n      toPush = model.modify({}, toPush);\n    } else {   // omit-type projection\n      toPush = { $unset: {} };\n      keys.forEach(function (k) { toPush.$unset[k] = true });\n      toPush = model.modify(candidate, toPush);\n    }\n    if (keepId) {\n      toPush._id = candidate._id;\n    } else {\n      delete toPush._id;\n    }\n    res.push(toPush);\n  });\n\n  return res;\n};\n\n\n/**\n * Get all matching elements\n * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n * This is an internal function, use exec which uses the executor\n *\n * @param {Function} callback - Signature: err, results\n */\nCursor.prototype._exec = function(_callback) {\n  var res = [], added = 0, skipped = 0, self = this\n    , error = null\n    , i, keys, key\n    ;\n\n  function callback (error, res) {\n    if (self.execFn) {\n      return self.execFn(error, res, _callback);\n    } else {\n      return _callback(error, res);\n    }\n  }\n\n  this.db.getCandidates(this.query, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      for (i = 0; i < candidates.length; i += 1) {\n        if (model.match(candidates[i], self.query)) {\n          // If a sort is defined, wait for the results to be sorted before applying limit and skip\n          if (!self._sort) {\n            if (self._skip && self._skip > skipped) {\n              skipped += 1;\n            } else {\n              res.push(candidates[i]);\n              added += 1;\n              if (self._limit && self._limit <= added) { break; }\n            }\n          } else {\n            res.push(candidates[i]);\n          }\n        }\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Apply all sorts\n    if (self._sort) {\n      keys = Object.keys(self._sort);\n\n      // Sorting\n      var criteria = [];\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        criteria.push({ key: key, direction: self._sort[key] });\n      }\n      res.sort(function(a, b) {\n        var criterion, compare, i;\n        for (i = 0; i < criteria.length; i++) {\n          criterion = criteria[i];\n          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);\n          if (compare !== 0) {\n            return compare;\n          }\n        }\n        return 0;\n      });\n\n      // Applying limit and skip\n      var limit = self._limit || res.length\n        , skip = self._skip || 0;\n\n      res = res.slice(skip, skip + limit);\n    }\n\n    // Apply projection\n    try {\n      res = self.project(res);\n    } catch (e) {\n      error = e;\n      res = undefined;\n    }\n\n    return callback(error, res);\n  });\n};\n\nCursor.prototype.exec = function () {\n  this.db.executor.push({ this: this, fn: this._exec, arguments: arguments });\n};\n\n\n\n// Interface\nmodule.exports = Cursor;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.5.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, 'readwrite');\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.put(value, key);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});","/**\n * Way data is stored for this database\n * For a Node.js/Node Webkit database it's the file system\n * For a browser-side database it's localforage, which uses the best backend available (IndexedDB then WebSQL then localStorage)\n *\n * This version is the browser version\n */\n\nvar localforage = require('localforage')\n\n// Configure localforage to display NeDB name for now. Would be a good idea to let user use his own app name\nlocalforage.config({\n  name: 'NeDB'\n, storeName: 'nedbdata'\n});\n\n\nfunction exists (filename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value !== null) {   // Even if value is undefined, localforage returns null\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  });\n}\n\n\nfunction rename (filename, newFilename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value === null) {\n      localforage.removeItem(newFilename, function () { return callback(); });\n    } else {\n      localforage.setItem(newFilename, value, function () {\n        localforage.removeItem(filename, function () { return callback(); });\n      });\n    }\n  });\n}\n\n\nfunction writeFile (filename, contents, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.setItem(filename, contents, function () { return callback(); });\n}\n\n\nfunction appendFile (filename, toAppend, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n\n  localforage.getItem(filename, function (err, contents) {\n    contents = contents || '';\n    contents += toAppend;\n    localforage.setItem(filename, contents, function () { return callback(); });\n  });\n}\n\n\nfunction readFile (filename, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.getItem(filename, function (err, contents) { return callback(null, contents || ''); });\n}\n\n\nfunction unlink (filename, callback) {\n  localforage.removeItem(filename, function () { return callback(); });\n}\n\n\n// Nothing to do, no directories will be used on the browser\nfunction mkdirp (dir, callback) {\n  return callback();\n}\n\n\n// Nothing to do, no data corruption possible in the brower\nfunction ensureDatafileIntegrity (filename, callback) {\n  return callback(null);\n}\n\n\n// Interface\nmodule.exports.exists = exists;\nmodule.exports.rename = rename;\nmodule.exports.writeFile = writeFile;\nmodule.exports.crashSafeWriteFile = writeFile;   // No need for a crash safe function in the browser\nmodule.exports.appendFile = appendFile;\nmodule.exports.readFile = readFile;\nmodule.exports.unlink = unlink;\nmodule.exports.mkdirp = mkdirp;\nmodule.exports.ensureDatafileIntegrity = ensureDatafileIntegrity;\n\n","/**\n * Handle every persistence-related task\n * The interface Datastore expects to be implemented is\n * * Persistence.loadDatabase(callback) and callback has signature err\n * * Persistence.persistNewState(newDocs, callback) where newDocs is an array of documents and callback has signature err\n */\n\nvar storage = require('./storage')\n  , path = require('path')\n  , model = require('./model')\n  , async = require('async')\n  , customUtils = require('./customUtils')\n  , Index = require('./indexes')\n  ;\n\n\n/**\n * Create a new Persistence object for database options.db\n * @param {Datastore} options.db\n * @param {Boolean} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n */\nfunction Persistence (options) {\n  var i, j, randomString;\n\n  this.db = options.db;\n  this.inMemoryOnly = this.db.inMemoryOnly;\n  this.filename = this.db.filename;\n  this.corruptAlertThreshold = options.corruptAlertThreshold !== undefined ? options.corruptAlertThreshold : 0.1;\n\n  if (!this.inMemoryOnly && this.filename && this.filename.charAt(this.filename.length - 1) === '~') {\n    throw new Error(\"The datafile name can't end with a ~, which is reserved for crash safe backup files\");\n  }\n\n  // After serialization and before deserialization hooks with some basic sanity checks\n  if (options.afterSerialization && !options.beforeDeserialization) {\n    throw new Error(\"Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  if (!options.afterSerialization && options.beforeDeserialization) {\n    throw new Error(\"Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  this.afterSerialization = options.afterSerialization || function (s) { return s; };\n  this.beforeDeserialization = options.beforeDeserialization || function (s) { return s; };\n  for (i = 1; i < 30; i += 1) {\n    for (j = 0; j < 10; j += 1) {\n      randomString = customUtils.uid(i);\n      if (this.beforeDeserialization(this.afterSerialization(randomString)) !== randomString) {\n        throw new Error(\"beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss\");\n      }\n    }\n  }\n\n  // For NW apps, store data in the same directory where NW stores application data\n  if (this.filename && options.nodeWebkitAppName) {\n    console.log(\"==================================================================\");\n    console.log(\"WARNING: The nodeWebkitAppName option is deprecated\");\n    console.log(\"To get the path to the directory where Node Webkit stores the data\");\n    console.log(\"for your app, use the internal nw.gui module like this\");\n    console.log(\"require('nw.gui').App.dataPath\");\n    console.log(\"See https://github.com/rogerwang/node-webkit/issues/500\");\n    console.log(\"==================================================================\");\n    this.filename = Persistence.getNWAppFilename(options.nodeWebkitAppName, this.filename);\n  }\n};\n\n\n/**\n * Check if a directory exists and create it on the fly if it is not the case\n * cb is optional, signature: err\n */\nPersistence.ensureDirectoryExists = function (dir, cb) {\n  var callback = cb || function () {}\n    ;\n\n  storage.mkdirp(dir, function (err) { return callback(err); });\n};\n\n\n\n\n/**\n * Return the path the datafile if the given filename is relative to the directory where Node Webkit stores\n * data for this application. Probably the best place to store data\n */\nPersistence.getNWAppFilename = function (appName, relativeFilename) {\n  var home;\n\n  switch (process.platform) {\n    case 'win32':\n    case 'win64':\n      home = process.env.LOCALAPPDATA || process.env.APPDATA;\n      if (!home) { throw new Error(\"Couldn't find the base application data folder\"); }\n      home = path.join(home, appName);\n      break;\n    case 'darwin':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, 'Library', 'Application Support', appName);\n      break;\n    case 'linux':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, '.config', appName);\n      break;\n    default:\n      throw new Error(\"Can't use the Node Webkit relative path for platform \" + process.platform);\n      break;\n  }\n\n  return path.join(home, 'nedb-data', relativeFilename);\n}\n\n\n/**\n * Persist cached database\n * This serves as a compaction function since the cache always contains only the number of documents in the collection\n * while the data file is append-only so it may grow larger\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.persistCachedDatabase = function (cb) {\n  var callback = cb || function () {}\n    , toPersist = ''\n    , self = this\n    ;\n\n  if (this.inMemoryOnly) { return callback(null); }\n\n  this.db.getAllData().forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n  Object.keys(this.db.indexes).forEach(function (fieldName) {\n    if (fieldName != \"_id\") {   // The special _id index is managed by datastore.js, the others need to be persisted\n      toPersist += self.afterSerialization(model.serialize({ $$indexCreated: { fieldName: fieldName, unique: self.db.indexes[fieldName].unique, sparse: self.db.indexes[fieldName].sparse }})) + '\\n';\n    }\n  });\n\n  storage.crashSafeWriteFile(this.filename, toPersist, function (err) {\n    if (err) { return callback(err); }\n    self.db.emit('compaction.done');\n    return callback(null);\n  });\n};\n\n\n/**\n * Queue a rewrite of the datafile\n */\nPersistence.prototype.compactDatafile = function () {\n  this.db.executor.push({ this: this, fn: this.persistCachedDatabase, arguments: [] });\n};\n\n\n/**\n * Set automatic compaction every interval ms\n * @param {Number} interval in milliseconds, with an enforced minimum of 5 seconds\n */\nPersistence.prototype.setAutocompactionInterval = function (interval) {\n  var self = this\n    , minInterval = 5000\n    , realInterval = Math.max(interval || 0, minInterval)\n    ;\n\n  this.stopAutocompaction();\n\n  this.autocompactionIntervalId = setInterval(function () {\n    self.compactDatafile();\n  }, realInterval);\n};\n\n\n/**\n * Stop autocompaction (do nothing if autocompaction was not running)\n */\nPersistence.prototype.stopAutocompaction = function () {\n  if (this.autocompactionIntervalId) { clearInterval(this.autocompactionIntervalId); }\n};\n\n\n/**\n * Persist new state for the given newDocs (can be insertion, update or removal)\n * Use an append-only format\n * @param {Array} newDocs Can be empty if no doc was updated/removed\n * @param {Function} cb Optional, signature: err\n */\nPersistence.prototype.persistNewState = function (newDocs, cb) {\n  var self = this\n    , toPersist = ''\n    , callback = cb || function () {}\n    ;\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  newDocs.forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n\n  if (toPersist.length === 0) { return callback(null); }\n\n  storage.appendFile(self.filename, toPersist, 'utf8', function (err) {\n    return callback(err);\n  });\n};\n\n\n/**\n * From a database's raw data, return the corresponding\n * machine understandable collection\n */\nPersistence.prototype.treatRawData = function (rawData) {\n  var data = rawData.split('\\n')\n    , dataById = {}\n    , tdata = []\n    , i\n    , indexes = {}\n    , corruptItems = -1   // Last line of every data file is usually blank so not really corrupt\n    ;\n\n  for (i = 0; i < data.length; i += 1) {\n    var doc;\n\n    try {\n      doc = model.deserialize(this.beforeDeserialization(data[i]));\n      if (doc._id) {\n        if (doc.$$deleted === true) {\n          delete dataById[doc._id];\n        } else {\n          dataById[doc._id] = doc;\n        }\n      } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != undefined) {\n        indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated;\n      } else if (typeof doc.$$indexRemoved === \"string\") {\n        delete indexes[doc.$$indexRemoved];\n      }\n    } catch (e) {\n      corruptItems += 1;\n    }\n  }\n\n  // A bit lenient on corruption\n  if (data.length > 0 && corruptItems / data.length > this.corruptAlertThreshold) {\n    throw new Error(\"More than \" + Math.floor(100 * this.corruptAlertThreshold) + \"% of the data file is corrupt, the wrong beforeDeserialization hook may be used. Cautiously refusing to start NeDB to prevent dataloss\");\n  }\n\n  Object.keys(dataById).forEach(function (k) {\n    tdata.push(dataById[k]);\n  });\n\n  return { data: tdata, indexes: indexes };\n};\n\n\n/**\n * Load the database\n * 1) Create all indexes\n * 2) Insert all data\n * 3) Compact the database\n * This means pulling data out of the data file or creating it if it doesn't exist\n * Also, all data is persisted right away, which has the effect of compacting the database file\n * This operation is very quick at startup for a big collection (60ms for ~10k docs)\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.loadDatabase = function (cb) {\n  var callback = cb || function () {}\n    , self = this\n    ;\n\n  self.db.resetIndexes();\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  async.waterfall([\n    function (cb) {\n      Persistence.ensureDirectoryExists(path.dirname(self.filename), function (err) {\n        storage.ensureDatafileIntegrity(self.filename, function (err) {\n          storage.readFile(self.filename, 'utf8', function (err, rawData) {\n            if (err) { return cb(err); }\n\n            try {\n              var treatedData = self.treatRawData(rawData);\n            } catch (e) {\n              return cb(e);\n            }\n\n            // Recreate all indexes in the datafile\n            Object.keys(treatedData.indexes).forEach(function (key) {\n              self.db.indexes[key] = new Index(treatedData.indexes[key]);\n            });\n\n            // Fill cached database (i.e. all indexes) with data\n            try {\n              self.db.resetIndexes(treatedData.data);\n            } catch (e) {\n              self.db.resetIndexes();   // Rollback any index which didn't fail\n              return cb(e);\n            }\n\n            self.db.persistence.persistCachedDatabase(cb);\n          });\n        });\n      });\n    }\n  ], function (err) {\n       if (err) { return callback(err); }\n\n       self.db.executor.processBuffer();\n       return callback(null);\n     });\n};\n\n\n// Interface\nmodule.exports = Persistence;\n","/**\n * Self-balancing binary search tree using the AVL implementation\n */\nvar BinarySearchTree = require('./bst')\n  , customUtils = require('./customUtils')\n  , util = require('util')\n  , _ = require('underscore')\n  ;\n\n\n/**\n * Constructor\n * We can't use a direct pointer to the root node (as in the simple binary search tree)\n * as the root will change during tree rotations\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction AVLTree (options) {\n  this.tree = new _AVLTree(options);\n}\n\n\n/**\n * Constructor of the internal AVLTree\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction _AVLTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n/**\n * Inherit basic functions from the basic binary search tree\n */\nutil.inherits(_AVLTree, BinarySearchTree);\n\n/**\n * Keep a pointer to the internal tree constructor for testing purposes\n */\nAVLTree._AVLTree = _AVLTree;\n\n\n/**\n * Check the recorded height is correct for every node\n * Throws if one height doesn't match\n */\n_AVLTree.prototype.checkHeightCorrect = function () {\n  var leftH, rightH;\n\n  if (!this.hasOwnProperty('key')) { return; }   // Empty tree\n\n  if (this.left && this.left.height === undefined) { throw new Error(\"Undefined height for node \" + this.left.key); }\n  if (this.right && this.right.height === undefined) { throw new Error(\"Undefined height for node \" + this.right.key); }\n  if (this.height === undefined) { throw new Error(\"Undefined height for node \" + this.key); }\n\n  leftH = this.left ? this.left.height : 0;\n  rightH = this.right ? this.right.height : 0;\n\n  if (this.height !== 1 + Math.max(leftH, rightH)) { throw new Error(\"Height constraint failed for node \" + this.key); }\n  if (this.left) { this.left.checkHeightCorrect(); }\n  if (this.right) { this.right.checkHeightCorrect(); }\n};\n\n\n/**\n * Return the balance factor\n */\n_AVLTree.prototype.balanceFactor = function () {\n  var leftH = this.left ? this.left.height : 0\n    , rightH = this.right ? this.right.height : 0\n    ;\n  return leftH - rightH;\n};\n\n\n/**\n * Check that the balance factors are all between -1 and 1\n */\n_AVLTree.prototype.checkBalanceFactors = function () {\n  if (Math.abs(this.balanceFactor()) > 1) { throw new Error('Tree is unbalanced at node ' + this.key); }\n\n  if (this.left) { this.left.checkBalanceFactors(); }\n  if (this.right) { this.right.checkBalanceFactors(); }\n};\n\n\n/**\n * When checking if the BST conditions are met, also check that the heights are correct\n * and the tree is balanced\n */\n_AVLTree.prototype.checkIsAVLT = function () {\n  _AVLTree.super_.prototype.checkIsBST.call(this);\n  this.checkHeightCorrect();\n  this.checkBalanceFactors();\n};\nAVLTree.prototype.checkIsAVLT = function () { this.tree.checkIsAVLT(); };\n\n\n/**\n * Perform a right rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.rightRotation = function () {\n  var q = this\n    , p = this.left\n    , b\n    , ah, bh, ch;\n\n  if (!p) { return this; }   // No change\n\n  b = p.right;\n\n  // Alter tree structure\n  if (q.parent) {\n    p.parent = q.parent;\n    if (q.parent.left === q) { q.parent.left = p; } else { q.parent.right = p; }\n  } else {\n    p.parent = null;\n  }\n  p.right = q;\n  q.parent = p;\n  q.left = b;\n  if (b) { b.parent = q; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  q.height = Math.max(bh, ch) + 1;\n  p.height = Math.max(ah, q.height) + 1;\n\n  return p;\n};\n\n\n/**\n * Perform a left rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.leftRotation = function () {\n  var p = this\n    , q = this.right\n    , b\n    , ah, bh, ch;\n\n  if (!q) { return this; }   // No change\n\n  b = q.left;\n\n  // Alter tree structure\n  if (p.parent) {\n    q.parent = p.parent;\n    if (p.parent.left === p) { p.parent.left = q; } else { p.parent.right = q; }\n  } else {\n    q.parent = null;\n  }\n  q.left = p;\n  p.parent = q;\n  p.right = b;\n  if (b) { b.parent = p; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  p.height = Math.max(ah, bh) + 1;\n  q.height = Math.max(ch, p.height) + 1;\n\n  return q;\n};\n\n\n/**\n * Modify the tree if its right subtree is too small compared to the left\n * Return the new root if any\n */\n_AVLTree.prototype.rightTooSmall = function () {\n  if (this.balanceFactor() <= 1) { return this; }   // Right is not too small, don't change\n\n  if (this.left.balanceFactor() < 0) {\n    this.left.leftRotation();\n  }\n\n  return this.rightRotation();\n};\n\n\n/**\n * Modify the tree if its left subtree is too small compared to the right\n * Return the new root if any\n */\n_AVLTree.prototype.leftTooSmall = function () {\n  if (this.balanceFactor() >= -1) { return this; }   // Left is not too small, don't change\n\n  if (this.right.balanceFactor() > 0) {\n    this.right.rightRotation();\n  }\n\n  return this.leftRotation();\n};\n\n\n/**\n * Rebalance the tree along the given path. The path is given reversed (as he was calculated\n * in the insert and delete functions).\n * Returns the new root of the tree\n * Of course, the first element of the path must be the root of the tree\n */\n_AVLTree.prototype.rebalanceAlongPath = function (path) {\n  var newRoot = this\n    , rotated\n    , i;\n\n  if (!this.hasOwnProperty('key')) { delete this.height; return this; }   // Empty tree\n\n  // Rebalance the tree and update all heights\n  for (i = path.length - 1; i >= 0; i -= 1) {\n    path[i].height = 1 + Math.max(path[i].left ? path[i].left.height : 0, path[i].right ? path[i].right.height : 0);\n\n    if (path[i].balanceFactor() > 1) {\n      rotated = path[i].rightTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n\n    if (path[i].balanceFactor() < -1) {\n      rotated = path[i].leftTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n  }\n\n  return newRoot;\n};\n\n\n/**\n * Insert a key, value pair in the tree while maintaining the AVL tree height constraint\n * Return a pointer to the root node, which may have changed\n */\n_AVLTree.prototype.insert = function (key, value) {\n  var insertPath = []\n    , currentNode = this\n    ;\n\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    this.height = 1;\n    return this;\n  }\n\n  // Insert new leaf at the right place\n  while (true) {\n    // Same key: no change in the tree structure\n    if (currentNode.compareKeys(currentNode.key, key) === 0) {\n      if (currentNode.unique) {\n        var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n        err.key = key;\n        err.errorType = 'uniqueViolated';\n        throw err;\n      } else {\n        currentNode.data.push(value);\n      }\n      return this;\n    }\n\n    insertPath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (!currentNode.left) {\n        insertPath.push(currentNode.createLeftChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.left;\n      }\n    } else {\n      if (!currentNode.right) {\n        insertPath.push(currentNode.createRightChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.right;\n      }\n    }\n  }\n\n  return this.rebalanceAlongPath(insertPath);\n};\n\n// Insert in the internal tree, update the pointer to the root if needed\nAVLTree.prototype.insert = function (key, value) {\n  var newTree = this.tree.insert(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Delete a key or just a value and return the new root of the tree\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\n_AVLTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    , currentNode = this\n    , deletePath = []\n    ;\n\n  if (!this.hasOwnProperty('key')) { return this; }   // Empty tree\n\n  // Either no match is found and the function will return from within the loop\n  // Or a match is found and deletePath will contain the path from the root to the node to delete after the loop\n  while (true) {\n    if (currentNode.compareKeys(key, currentNode.key) === 0) { break; }\n\n    deletePath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (currentNode.left) {\n        currentNode = currentNode.left;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    } else {\n      // currentNode.compareKeys(key, currentNode.key) is > 0\n      if (currentNode.right) {\n        currentNode = currentNode.right;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    }\n  }\n\n  // Delete only a value (no tree modification)\n  if (currentNode.data.length > 1 && value) {\n    currentNode.data.forEach(function (d) {\n      if (!currentNode.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    currentNode.data = newData;\n    return this;\n  }\n\n  // Delete a whole node\n\n  // Leaf\n  if (!currentNode.left && !currentNode.right) {\n    if (currentNode === this) {   // This leaf is also the root\n      delete currentNode.key;\n      currentNode.data = [];\n      delete currentNode.height;\n      return this;\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = null;\n      } else {\n        currentNode.parent.right = null;\n      }\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with only one child\n  if (!currentNode.left || !currentNode.right) {\n    replaceWith = currentNode.left ? currentNode.left : currentNode.right;\n\n    if (currentNode === this) {   // This node is also the root\n      replaceWith.parent = null;\n      return replaceWith;   // height of replaceWith is necessarily 1 because the tree was balanced before deletion\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      } else {\n        currentNode.parent.right = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      }\n\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with two children\n  // Use the in-order predecessor (no need to randomize since we actively rebalance)\n  deletePath.push(currentNode);\n  replaceWith = currentNode.left;\n\n  // Special case: the in-order predecessor is right below the node to delete\n  if (!replaceWith.right) {\n    currentNode.key = replaceWith.key;\n    currentNode.data = replaceWith.data;\n    currentNode.left = replaceWith.left;\n    if (replaceWith.left) { replaceWith.left.parent = currentNode; }\n    return this.rebalanceAlongPath(deletePath);\n  }\n\n  // After this loop, replaceWith is the right-most leaf in the left subtree\n  // and deletePath the path from the root (inclusive) to replaceWith (exclusive)\n  while (true) {\n    if (replaceWith.right) {\n      deletePath.push(replaceWith);\n      replaceWith = replaceWith.right;\n    } else {\n      break;\n    }\n  }\n\n  currentNode.key = replaceWith.key;\n  currentNode.data = replaceWith.data;\n\n  replaceWith.parent.right = replaceWith.left;\n  if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n\n  return this.rebalanceAlongPath(deletePath);\n};\n\n// Delete a value\nAVLTree.prototype.delete = function (key, value) {\n  var newTree = this.tree.delete(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Other functions we want to use on an AVLTree as if it were the internal _AVLTree\n */\n['getNumberOfKeys', 'search', 'betweenBounds', 'prettyPrint', 'executeOnEveryNode'].forEach(function (fn) {\n  AVLTree.prototype[fn] = function () {\n    return this.tree[fn].apply(this.tree, arguments);\n  };\n});\n\n\n// Interface\nmodule.exports = AVLTree;\n","module.exports.BinarySearchTree = require('./lib/bst');\nmodule.exports.AVLTree = require('./lib/avltree');\n","/**\n * Responsible for sequentially executing actions on the database\n */\n\nvar async = require('async')\n  ;\n\nfunction Executor () {\n  this.buffer = [];\n  this.ready = false;\n\n  // This queue will execute all commands, one-by-one in order\n  this.queue = async.queue(function (task, cb) {\n    var newArguments = [];\n\n    // task.arguments is an array-like object on which adding a new field doesn't work, so we transform it into a real array\n    for (var i = 0; i < task.arguments.length; i += 1) { newArguments.push(task.arguments[i]); }\n    var lastArg = task.arguments[task.arguments.length - 1];\n\n    // Always tell the queue task is complete. Execute callback if any was given.\n    if (typeof lastArg === 'function') {\n      // Callback was supplied\n      newArguments[newArguments.length - 1] = function () {\n        if (typeof setImmediate === 'function') {\n           setImmediate(cb);\n        } else {\n          process.nextTick(cb);\n        }\n        lastArg.apply(null, arguments);\n      };\n    } else if (!lastArg && task.arguments.length !== 0) {\n      // false/undefined/null supplied as callbback\n      newArguments[newArguments.length - 1] = function () { cb(); };\n    } else {\n      // Nothing supplied as callback\n      newArguments.push(function () { cb(); });\n    }\n\n\n    task.fn.apply(task.this, newArguments);\n  }, 1);\n}\n\n\n/**\n * If executor is ready, queue task (and process it immediately if executor was idle)\n * If not, buffer task for later processing\n * @param {Object} task\n *                 task.this - Object to use as this\n *                 task.fn - Function to execute\n *                 task.arguments - Array of arguments, IMPORTANT: only the last argument may be a function (the callback)\n *                                                                 and the last argument cannot be false/undefined/null\n * @param {Boolean} forceQueuing Optional (defaults to false) force executor to queue task even if it is not ready\n */\nExecutor.prototype.push = function (task, forceQueuing) {\n  if (this.ready || forceQueuing) {\n    this.queue.push(task);\n  } else {\n    this.buffer.push(task);\n  }\n};\n\n\n/**\n * Queue all tasks in buffer (in the same order they came in)\n * Automatically sets executor as ready\n */\nExecutor.prototype.processBuffer = function () {\n  var i;\n  this.ready = true;\n  for (i = 0; i < this.buffer.length; i += 1) { this.queue.push(this.buffer[i]); }\n  this.buffer = [];\n};\n\n\n\n// Interface\nmodule.exports = Executor;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","var customUtils = require('./customUtils')\n  , model = require('./model')\n  , async = require('async')\n  , Executor = require('./executor')\n  , Index = require('./indexes')\n  , util = require('util')\n  , _ = require('underscore')\n  , Persistence = require('./persistence')\n  , Cursor = require('./cursor')\n  ;\n\n\n/**\n * Create a new collection\n * @param {String} options.filename Optional, datastore will be in-memory only if not provided\n * @param {Boolean} options.timestampData Optional, defaults to false. If set to true, createdAt and updatedAt will be created and populated automatically (if not specified by user)\n * @param {Boolean} options.inMemoryOnly Optional, defaults to false\n * @param {String} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n * @param {Boolean} options.autoload Optional, defaults to false\n * @param {Function} options.onload Optional, if autoload is used this will be called after the load database with the error object as parameter. If you don't pass it the error will be thrown\n * @param {Function} options.afterSerialization/options.beforeDeserialization Optional, serialization hooks\n * @param {Number} options.corruptAlertThreshold Optional, threshold after which an alert is thrown if too much data is corrupt\n * @param {Function} options.compareStrings Optional, string comparison function that overrides default for sorting\n *\n * Event Emitter - Events\n * * compaction.done - Fired whenever a compaction operation was finished\n */\nfunction Datastore (options) {\n  var filename;\n\n  // Retrocompatibility with v0.6 and before\n  if (typeof options === 'string') {\n    filename = options;\n    this.inMemoryOnly = false;   // Default\n  } else {\n    options = options || {};\n    filename = options.filename;\n    this.inMemoryOnly = options.inMemoryOnly || false;\n    this.autoload = options.autoload || false;\n    this.timestampData = options.timestampData || false;\n  }\n\n  // Determine whether in memory or persistent\n  if (!filename || typeof filename !== 'string' || filename.length === 0) {\n    this.filename = null;\n    this.inMemoryOnly = true;\n  } else {\n    this.filename = filename;\n  }\n\n  // String comparison function\n  this.compareStrings = options.compareStrings;\n\n  // Persistence handling\n  this.persistence = new Persistence({ db: this, nodeWebkitAppName: options.nodeWebkitAppName\n                                      , afterSerialization: options.afterSerialization\n                                      , beforeDeserialization: options.beforeDeserialization\n                                      , corruptAlertThreshold: options.corruptAlertThreshold\n                                      });\n\n  // This new executor is ready if we don't use persistence\n  // If we do, it will only be ready once loadDatabase is called\n  this.executor = new Executor();\n  if (this.inMemoryOnly) { this.executor.ready = true; }\n\n  // Indexed by field name, dot notation can be used\n  // _id is always indexed and since _ids are generated randomly the underlying\n  // binary is always well-balanced\n  this.indexes = {};\n  this.indexes._id = new Index({ fieldName: '_id', unique: true });\n  this.ttlIndexes = {};\n\n  // Queue a load of the database right away and call the onload handler\n  // By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception\n  if (this.autoload) { this.loadDatabase(options.onload || function (err) {\n    if (err) { throw err; }\n  }); }\n}\n\nutil.inherits(Datastore, require('events').EventEmitter);\n\n\n/**\n * Load the database from the datafile, and trigger the execution of buffered commands if any\n */\nDatastore.prototype.loadDatabase = function () {\n  this.executor.push({ this: this.persistence, fn: this.persistence.loadDatabase, arguments: arguments }, true);\n};\n\n\n/**\n * Get an array of all the data in the database\n */\nDatastore.prototype.getAllData = function () {\n  return this.indexes._id.getAll();\n};\n\n\n/**\n * Reset all currently defined indexes\n */\nDatastore.prototype.resetIndexes = function (newData) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].reset(newData);\n  });\n};\n\n\n/**\n * Ensure an index is kept for this field. Same parameters as lib/indexes\n * For now this function is synchronous, we need to test how much time it takes\n * We use an async API for consistency with the rest of the code\n * @param {String} options.fieldName\n * @param {Boolean} options.unique\n * @param {Boolean} options.sparse\n * @param {Number} options.expireAfterSeconds - Optional, if set this index becomes a TTL index (only works on Date fields, not arrays of Date)\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.ensureIndex = function (options, cb) {\n  var err\n    , callback = cb || function () {};\n\n  options = options || {};\n\n  if (!options.fieldName) {\n    err = new Error(\"Cannot create an index without a fieldName\");\n    err.missingFieldName = true;\n    return callback(err);\n  }\n  if (this.indexes[options.fieldName]) { return callback(null); }\n\n  this.indexes[options.fieldName] = new Index(options);\n  if (options.expireAfterSeconds !== undefined) { this.ttlIndexes[options.fieldName] = options.expireAfterSeconds; }   // With this implementation index creation is not necessary to ensure TTL but we stick with MongoDB's API here\n\n  try {\n    this.indexes[options.fieldName].insert(this.getAllData());\n  } catch (e) {\n    delete this.indexes[options.fieldName];\n    return callback(e);\n  }\n\n  // We may want to force all options to be persisted including defaults, not just the ones passed the index creation function\n  this.persistence.persistNewState([{ $$indexCreated: options }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Remove an index\n * @param {String} fieldName\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.removeIndex = function (fieldName, cb) {\n  var callback = cb || function () {};\n\n  delete this.indexes[fieldName];\n\n  this.persistence.persistNewState([{ $$indexRemoved: fieldName }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Add one or several document(s) to all indexes\n */\nDatastore.prototype.addToIndexes = function (doc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].insert(doc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the insert on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].remove(doc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove one or several document(s) from all indexes\n */\nDatastore.prototype.removeFromIndexes = function (doc) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].remove(doc);\n  });\n};\n\n\n/**\n * Update one or several documents in all indexes\n * To update multiple documents, oldDoc must be an array of { oldDoc, newDoc } pairs\n * If one update violates a constraint, all changes are rolled back\n */\nDatastore.prototype.updateIndexes = function (oldDoc, newDoc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].update(oldDoc, newDoc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the update on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].revertUpdate(oldDoc, newDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Return the list of candidates for a given query\n * Crude implementation for now, we return the candidates given by the first usable index if any\n * We try the following query types, in this order: basic match, $in match, comparison match\n * One way to make it better would be to enable the use of multiple indexes if the first usable index\n * returns too much data. I may do it in the future.\n *\n * Returned candidates will be scanned to find and remove all expired documents\n *\n * @param {Query} query\n * @param {Boolean} dontExpireStaleDocs Optional, defaults to false, if true don't remove stale docs. Useful for the remove function which shouldn't be impacted by expirations\n * @param {Function} callback Signature err, docs\n */\nDatastore.prototype.getCandidates = function (query, dontExpireStaleDocs, callback) {\n  var indexNames = Object.keys(this.indexes)\n    , self = this\n    , usableQueryKeys;\n\n  if (typeof dontExpireStaleDocs === 'function') {\n    callback = dontExpireStaleDocs;\n    dontExpireStaleDocs = false;\n  }\n\n  async.waterfall([\n  // STEP 1: get candidates list by checking indexes from most to least frequent usecase\n  function (cb) {\n    // For a basic match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (typeof query[k] === 'string' || typeof query[k] === 'number' || typeof query[k] === 'boolean' || util.isDate(query[k]) || query[k] === null) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]]));\n    }\n\n    // For a $in match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && query[k].hasOwnProperty('$in')) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]].$in));\n    }\n\n    // For a comparison match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && (query[k].hasOwnProperty('$lt') || query[k].hasOwnProperty('$lte') || query[k].hasOwnProperty('$gt') || query[k].hasOwnProperty('$gte'))) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getBetweenBounds(query[usableQueryKeys[0]]));\n    }\n\n    // By default, return all the DB data\n    return cb(null, self.getAllData());\n  }\n  // STEP 2: remove all expired documents\n  , function (docs) {\n    if (dontExpireStaleDocs) { return callback(null, docs); }\n\n    var expiredDocsIds = [], validDocs = [], ttlIndexesFieldNames = Object.keys(self.ttlIndexes);\n\n    docs.forEach(function (doc) {\n      var valid = true;\n      ttlIndexesFieldNames.forEach(function (i) {\n        if (doc[i] !== undefined && util.isDate(doc[i]) && Date.now() > doc[i].getTime() + self.ttlIndexes[i] * 1000) {\n          valid = false;\n        }\n      });\n      if (valid) { validDocs.push(doc); } else { expiredDocsIds.push(doc._id); }\n    });\n\n    async.eachSeries(expiredDocsIds, function (_id, cb) {\n      self._remove({ _id: _id }, {}, function (err) {\n        if (err) { return callback(err); }\n        return cb();\n      });\n    }, function (err) {\n      return callback(null, validDocs);\n    });\n  }]);\n};\n\n\n/**\n * Insert a new document\n * @param {Function} cb Optional callback, signature: err, insertedDoc\n *\n * @api private Use Datastore.insert which has the same signature\n */\nDatastore.prototype._insert = function (newDoc, cb) {\n  var callback = cb || function () {}\n    , preparedDoc\n    ;\n\n  try {\n    preparedDoc = this.prepareDocumentForInsertion(newDoc)\n    this._insertInCache(preparedDoc);\n  } catch (e) {\n    return callback(e);\n  }\n\n  this.persistence.persistNewState(util.isArray(preparedDoc) ? preparedDoc : [preparedDoc], function (err) {\n    if (err) { return callback(err); }\n    return callback(null, model.deepCopy(preparedDoc));\n  });\n};\n\n/**\n * Create a new _id that's not already in use\n */\nDatastore.prototype.createNewId = function () {\n  var tentativeId = customUtils.uid(16);\n  // Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)\n  if (this.indexes._id.getMatching(tentativeId).length > 0) {\n    tentativeId = this.createNewId();\n  }\n  return tentativeId;\n};\n\n/**\n * Prepare a document (or array of documents) to be inserted in a database\n * Meaning adds _id and timestamps if necessary on a copy of newDoc to avoid any side effect on user input\n * @api private\n */\nDatastore.prototype.prepareDocumentForInsertion = function (newDoc) {\n  var preparedDoc, self = this;\n\n  if (util.isArray(newDoc)) {\n    preparedDoc = [];\n    newDoc.forEach(function (doc) { preparedDoc.push(self.prepareDocumentForInsertion(doc)); });\n  } else {\n    preparedDoc = model.deepCopy(newDoc);\n    if (preparedDoc._id === undefined) { preparedDoc._id = this.createNewId(); }\n    var now = new Date();\n    if (this.timestampData && preparedDoc.createdAt === undefined) { preparedDoc.createdAt = now; }\n    if (this.timestampData && preparedDoc.updatedAt === undefined) { preparedDoc.updatedAt = now; }\n    model.checkObject(preparedDoc);\n  }\n\n  return preparedDoc;\n};\n\n/**\n * If newDoc is an array of documents, this will insert all documents in the cache\n * @api private\n */\nDatastore.prototype._insertInCache = function (preparedDoc) {\n  if (util.isArray(preparedDoc)) {\n    this._insertMultipleDocsInCache(preparedDoc);\n  } else {\n    this.addToIndexes(preparedDoc);\n  }\n};\n\n/**\n * If one insertion fails (e.g. because of a unique constraint), roll back all previous\n * inserts and throws the error\n * @api private\n */\nDatastore.prototype._insertMultipleDocsInCache = function (preparedDocs) {\n  var i, failingI, error;\n\n  for (i = 0; i < preparedDocs.length; i += 1) {\n    try {\n      this.addToIndexes(preparedDocs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.removeFromIndexes(preparedDocs[i]);\n    }\n\n    throw error;\n  }\n};\n\nDatastore.prototype.insert = function () {\n  this.executor.push({ this: this, fn: this._insert, arguments: arguments });\n};\n\n\n/**\n * Count all documents matching the query\n * @param {Object} query MongoDB-style query\n */\nDatastore.prototype.count = function(query, callback) {\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    return callback(null, docs.length);\n  });\n\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find all documents matching the query\n * If no callback is passed, we return the cursor so that user can limit, skip and finally exec\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.find = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    var res = [], i;\n\n    if (err) { return callback(err); }\n\n    for (i = 0; i < docs.length; i += 1) {\n      res.push(model.deepCopy(docs[i]));\n    }\n    return callback(null, res);\n  });\n\n  cursor.projection(projection);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find one document matching the query\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.findOne = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    if (docs.length === 1) {\n      return callback(null, model.deepCopy(docs[0]));\n    } else {\n      return callback(null, null);\n    }\n  });\n\n  cursor.projection(projection).limit(1);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Update all docs matching query\n * @param {Object} query\n * @param {Object} updateQuery\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n *                 options.upsert If true, document is inserted if the query doesn't match anything\n *                 options.returnUpdatedDocs Defaults to false, if true return as third argument the array of updated matched documents (even if no change actually took place)\n * @param {Function} cb Optional callback, signature: (err, numAffected, affectedDocuments, upsert)\n *                      If update was an upsert, upsert flag is set to true\n *                      affectedDocuments can be one of the following:\n *                        * For an upsert, the upserted document\n *                        * For an update with returnUpdatedDocs option false, null\n *                        * For an update with returnUpdatedDocs true and multi false, the updated document\n *                        * For an update with returnUpdatedDocs true and multi true, the array of updated documents\n *\n * WARNING: The API was changed between v1.7.4 and v1.8, for consistency and readability reasons. Prior and including to v1.7.4,\n *          the callback signature was (err, numAffected, updated) where updated was the updated document in case of an upsert\n *          or the array of updated documents for an update if the returnUpdatedDocs option was true. That meant that the type of\n *          affectedDocuments in a non multi update depended on whether there was an upsert or not, leaving only two ways for the\n *          user to check whether an upsert had occured: checking the type of affectedDocuments or running another find query on\n *          the whole dataset to check its size. Both options being ugly, the breaking change was necessary.\n *\n * @api private Use Datastore.update which has the same signature\n */\nDatastore.prototype._update = function (query, updateQuery, options, cb) {\n  var callback\n    , self = this\n    , numReplaced = 0\n    , multi, upsert\n    , i\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n  upsert = options.upsert !== undefined ? options.upsert : false;\n\n  async.waterfall([\n  function (cb) {   // If upsert option is set, check whether we need to insert the doc\n    if (!upsert) { return cb(); }\n\n    // Need to use an internal function not tied to the executor to avoid deadlock\n    var cursor = new Cursor(self, query);\n    cursor.limit(1)._exec(function (err, docs) {\n      if (err) { return callback(err); }\n      if (docs.length === 1) {\n        return cb();\n      } else {\n        var toBeInserted;\n\n        try {\n          model.checkObject(updateQuery);\n          // updateQuery is a simple object with no modifier, use it as the document to insert\n          toBeInserted = updateQuery;\n        } catch (e) {\n          // updateQuery contains modifiers, use the find query as the base,\n          // strip it from all operators and update it according to updateQuery\n          try {\n            toBeInserted = model.modify(model.deepCopy(query, true), updateQuery);\n          } catch (err) {\n            return callback(err);\n          }\n        }\n\n        return self._insert(toBeInserted, function (err, newDoc) {\n          if (err) { return callback(err); }\n          return callback(null, 1, newDoc, true);\n        });\n      }\n    });\n  }\n  , function () {   // Perform the update\n    var modifiedDoc , modifications = [], createdAt;\n\n    self.getCandidates(query, function (err, candidates) {\n      if (err) { return callback(err); }\n\n      // Preparing update (if an error is thrown here neither the datafile nor\n      // the in-memory indexes are affected)\n      try {\n        for (i = 0; i < candidates.length; i += 1) {\n          if (model.match(candidates[i], query) && (multi || numReplaced === 0)) {\n            numReplaced += 1;\n            if (self.timestampData) { createdAt = candidates[i].createdAt; }\n            modifiedDoc = model.modify(candidates[i], updateQuery);\n            if (self.timestampData) {\n              modifiedDoc.createdAt = createdAt;\n              modifiedDoc.updatedAt = new Date();\n            }\n            modifications.push({ oldDoc: candidates[i], newDoc: modifiedDoc });\n          }\n        }\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Change the docs in memory\n      try {\n        self.updateIndexes(modifications);\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Update the datafile\n      var updatedDocs = _.pluck(modifications, 'newDoc');\n      self.persistence.persistNewState(updatedDocs, function (err) {\n        if (err) { return callback(err); }\n        if (!options.returnUpdatedDocs) {\n          return callback(null, numReplaced);\n        } else {\n          var updatedDocsDC = [];\n          updatedDocs.forEach(function (doc) { updatedDocsDC.push(model.deepCopy(doc)); });\n          if (! multi) { updatedDocsDC = updatedDocsDC[0]; }\n          return callback(null, numReplaced, updatedDocsDC);\n        }\n      });\n    });\n  }]);\n};\n\nDatastore.prototype.update = function () {\n  this.executor.push({ this: this, fn: this._update, arguments: arguments });\n};\n\n\n/**\n * Remove all docs matching the query\n * For now very naive implementation (similar to update)\n * @param {Object} query\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n * @param {Function} cb Optional callback, signature: err, numRemoved\n *\n * @api private Use Datastore.remove which has the same signature\n */\nDatastore.prototype._remove = function (query, options, cb) {\n  var callback\n    , self = this, numRemoved = 0, removedDocs = [], multi\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n\n  this.getCandidates(query, true, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      candidates.forEach(function (d) {\n        if (model.match(d, query) && (multi || numRemoved === 0)) {\n          numRemoved += 1;\n          removedDocs.push({ $$deleted: true, _id: d._id });\n          self.removeFromIndexes(d);\n        }\n      });\n    } catch (err) { return callback(err); }\n\n    self.persistence.persistNewState(removedDocs, function (err) {\n      if (err) { return callback(err); }\n      return callback(null, numRemoved);\n    });\n  });\n};\n\nDatastore.prototype.remove = function () {\n  this.executor.push({ this: this, fn: this._remove, arguments: arguments });\n};\n\n\n\nmodule.exports = Datastore;\n","var Datastore = require('./lib/datastore');\n\nmodule.exports = Datastore;\n","var NedbDatastore = require('nedb')\nvar thenify = require('thenify')\n\nfunction fromInstance(nedbInstance) {\n\tvar newDB = { nedb: nedbInstance }\n\n\tvar methods = [ 'loadDatabase', 'insert', 'find', 'findOne', 'count', 'update', 'remove', 'ensureIndex', 'removeIndex' ]\n\tfor (var i = 0; i < methods.length; ++i) {\n\t\tvar m = methods[i]\n\t\tnewDB[m] = thenify(nedbInstance[m].bind(nedbInstance))\n\t}\n\n\tnewDB.cfind = function(query, projections) {\n\t\tvar cursor = nedbInstance.find(query, projections)\n\t\tcursor.exec = thenify(cursor.exec.bind(cursor))\n\t\treturn cursor\n\t}\n\n\tnewDB.cfindOne = function(query, projections) {\n\t\tvar cursor = nedbInstance.findOne(query, projections)\n\t\tcursor.exec = thenify(cursor.exec.bind(cursor))\n\t\treturn cursor\n\t}\n\n\tnewDB.ccount = function(query) {\n\t\tvar cursor = nedbInstance.count(query)\n\t\tcursor.exec = thenify(cursor.exec.bind(cursor))\n\t\treturn cursor\n\t}\n\n\treturn newDB\n}\n\nfunction datastore(options) {\n\tvar nedbInstance = new NedbDatastore(options)\n\treturn fromInstance(nedbInstance)\n}\n\n// so that import { datastore } still works:\ndatastore.datastore = datastore\ndatastore.fromInstance = fromInstance\n\nmodule.exports = datastore\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Event_1 = require(\"./Event\");\nconst events_1 = require(\"events\");\nconst nedb = require(\"nedb-promise\");\nconst Snap_1 = require(\"./Snap\");\nclass DefaultEventStore extends events_1.EventEmitter {\n    constructor() {\n        super();\n        this.events = nedb();\n        this.snaps = nedb();\n        this.sagas = nedb();\n    }\n    async existSaga(sagaId) {\n        return !!await this.getSaga(sagaId);\n    }\n    async beginSaga(sagaId) {\n        const exist = await this.existSaga(sagaId);\n        if (!exist) {\n            return this.sagas.insert({ sagaId, done: false, alive: true });\n        }\n    }\n    async getSaga(sagaId) {\n        return await this.sagas.cfindOne({ sagaId, alive: true }).exec();\n    }\n    async killSaga(sagaId) {\n        return await this.sagas.update({ sagaId }, { alive: false });\n    }\n    async endSaga(sagaId) {\n        const exist = await this.existSaga(sagaId);\n        if (exist) {\n            return await this.sagas.update({ sagaId }, { done: true });\n        }\n    }\n    async findUndoneSaga() {\n        return await this.sagas.find({ done: false });\n    }\n    async createSnap(snap) {\n        return await this.snaps.insert(snap.json);\n    }\n    async saveEvents(events) {\n        events = [].concat(events);\n        const eventsJSONArr = events.map(event => {\n            return event.json || event;\n        });\n        await this.events.insert(eventsJSONArr);\n        this.emit('saved events', events);\n    }\n    async getLatestSnapshot(actorId) {\n        let data = await this.snaps.cfindOne({ actorId }).sort({ index: -1, date: -1 }).exec();\n        if (data) {\n            return Snap_1.default.parse(data);\n        }\n    }\n    async getEvents(actorId) {\n        let events = await this.events.cfind({ actorId }).sort({ index: -1, date: -1 }).exec();\n        return events.map(event => Event_1.default.parse(event));\n    }\n    async getLatestEvent(actorId) {\n        let event = await this.events.cfind({ actorId }).sort({ index: -1, date: -1 }).limit(1).exec();\n        return event.length ? Event_1.default.parse(event[0]) : null;\n    }\n    async getEventsBySnapshot(snapId) {\n        const snap = await this.getSnapshotById(snapId);\n        if (snap) {\n            let events = await this.events.cfind({\n                actorId: snap.actorId,\n                index: { '$gt': snap.latestEventIndex }\n            }).sort({ date: 1, index: 1 }).exec();\n            return events.map(event => Event_1.default.parse(event));\n        }\n    }\n    async getSnapshotByIndex(actorId, index) {\n        let snap = await this.snaps.cfindOne({ actorId, index }).exec();\n        return Snap_1.default.parse(snap);\n    }\n    // async getSnapshotByLastIndex(actorId, index) {\n    //     let snap = await this.getLatestSnapshot(actorId);\n    //     if (snap) {\n    //         if (index === 0) {\n    //             return snap;\n    //         } else {\n    //             return await this.getSnapshotByIndex(actorId, snap.index - index);\n    //         }\n    //     }\n    // }\n    async getSnapshotById(id) {\n        let snap = await this.snaps.cfindOne({ id }).exec();\n        return Snap_1.default.parse(snap);\n    }\n    async getEventById(id) {\n        let event = await this.events.cfindOne({ id }).exec();\n        if (event) {\n            return Event_1.default.parse(event);\n        }\n        else {\n            return null;\n        }\n    }\n    async findEventsBySagaId(sagaId) {\n        let events = await this.events.cfind({ sagaId }).sort({ index: -1, date: -1 }).exec();\n        return events.map(event => Event_1.default.parse(event));\n    }\n    async removeEventsBySagaId(sagaId) {\n        await this.killSaga(sagaId);\n        await this.events.remove({ sagaId });\n    }\n}\nexports.default = DefaultEventStore;\n//# sourceMappingURL=DefaultEventStore.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst loadEvents = Symbol.for('loadEvents');\nfunction reborm(ActorClass, snap, events) {\n    const actor = ActorClass.parse(snap.data);\n    actor[loadEvents](events);\n    return actor;\n}\nexports.default = reborm;\n;\n//# sourceMappingURL=reborn.js.map","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Snap_1 = require(\"./Snap\");\nconst reborn_1 = require(\"./reborn\");\nconst events_1 = require(\"events\");\nconst setdata = Symbol.for(\"setdata\");\nclass Repository extends events_1.EventEmitter {\n    constructor(ActorClass, eventstore, roleMap) {\n        super();\n        this.ActorClass = ActorClass;\n        this.eventstore = eventstore;\n        this.roleMap = roleMap;\n        this.cache = new Map();\n    }\n    async create(data) {\n        const actor = new this.ActorClass(data);\n        const snap = new Snap_1.default(actor);\n        await this.eventstore.createSnap(snap);\n        this.cache.set(actor.id, actor);\n        setImmediate(() => this.emit(\"create\", actor.json));\n        return actor;\n    }\n    clear(id) {\n        if (this.cache.has(id)) {\n            this.cache.delete(id);\n            this.emit(\"clear\", id);\n        }\n    }\n    getFromCache(id) {\n        return this.cache.get(id);\n    }\n    async getHistory(actorId) {\n        const snap = await this.eventstore.getSnapshotByIndex(actorId, 0);\n        const events = await this.eventstore.getEvents(actorId);\n        if (snap) {\n            return {\n                _events: events,\n                _snap: snap,\n                _index: events.length,\n                _validateIndex(index) {\n                    return index > 0 && index <= this._events.length;\n                },\n                done: false,\n                data: reborn_1.default(this.ActorClass, snap, events).json,\n                _get(index) {\n                    if (this._validateIndex(index)) {\n                        let events = this._events.slice(0, index);\n                        this.data = reborn_1.default(this.ActorClass, this._snap, events).json;\n                        this.done = false;\n                    }\n                    else {\n                        this.done = true;\n                    }\n                    return this;\n                },\n                next() {\n                    let index = this._index++;\n                    return this._get(index);\n                },\n                prev() {\n                    let index = this._index++;\n                    return this._get(index);\n                }\n            };\n        }\n        throw new Error(\"no actor by \" + actorId);\n    }\n    async get(id) {\n        let actor = this.getFromCache(id);\n        if (actor) {\n            if (actor.json.isAlive) {\n                return actor;\n            }\n            else {\n                this.cache.delete(id);\n                return null;\n            }\n        }\n        else {\n            this.emit(\"reborn\", id);\n            let snap = await this.eventstore.getLatestSnapshot(id);\n            if (snap) {\n                const events = await this.eventstore.getEventsBySnapshot(snap.id);\n                const actor = this.ActorClass.parse(snap.data);\n                events.forEach(event => {\n                    let role = this.roleMap.get(event.roleName);\n                    let updater = actor.updater[event.type] ||\n                        actor.updater[event.method + \"Update\"] ||\n                        (role ? role.updater[event.type] || role.updater[event.method] : null);\n                    const updatedData = updater ? updater(actor.json, event) : {};\n                    actor[setdata] = Object.assign({}, actor.json, updatedData);\n                    return actor || null;\n                });\n            }\n        }\n    }\n    exist(id) {\n        return this.cache.has(id);\n    }\n    getCacheActorIds() {\n        return [...this.cache.keys()];\n    }\n}\nexports.default = Repository;\n//# sourceMappingURL=Repository.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Event_1 = require(\"./Event\");\nconst uuid = require(\"uuid\").v1;\nconst uncommittedEvents = Symbol.for(\"uncommittedEvents\");\nconst setdata = Symbol.for(\"setdata\");\n/**\n * When call actor's method , then DI service object.\n */\nclass Service {\n    constructor(actor, bus, repo, getActor, createActor, method, sagaId, roleName, role) {\n        this.actor = actor;\n        this.bus = bus;\n        this.repo = repo;\n        this.getActor = getActor;\n        this.createActor = createActor;\n        this.method = method;\n        this.sagaId = sagaId;\n        this.roleName = roleName;\n        this.role = role;\n        this.lockMode = false;\n        this.sagaMode = false;\n        this.key = uuid();\n        this.applied = false;\n    }\n    apply(type, data, direct) {\n        const event = new Event_1.default(this.actor, data, type, this.method, this.sagaId, direct || false, this.roleName);\n        let updater;\n        if (type === \"remove\") {\n            updater = () => ({ isAlive: false });\n        }\n        else if (type === \"subscribe\") {\n            updater = (json, _event) => {\n                const listeners = json.listeners;\n                let { event, listenerType, listenerId, handleMethodName } = _event.data;\n                if (listeners[event]) {\n                    listeners[event][listenerId] = { handleMethodName, listenerType };\n                }\n                else {\n                    listeners[event] = { [listenerId]: { handleMethodName, listenerType } };\n                }\n                return { listeners };\n            };\n        }\n        else if (type === \"unsubscribe\") {\n            updater = (json, _event) => {\n                const listeners = json.listeners;\n                let { event, listenerId } = _event.data;\n                if (listeners[event]) {\n                    delete listeners[event][listenerId];\n                }\n                return { listeners };\n            };\n        }\n        else {\n            updater = (this.actor.updater[type] ||\n                this.actor.updater[this.method + \"Update\"] ||\n                (this.role ? this.role.updater[type] || this.role.updater[this.method] : null));\n        }\n        if (!updater)\n            return;\n        const updatedData = updater(this.actor.json, event);\n        event.updatedData = updatedData;\n        this.actor[setdata] = Object.assign({}, this.actor.json, direct ? data : {}, updatedData);\n        this.actor[uncommittedEvents] = this.actor[uncommittedEvents] || [];\n        this.actor[uncommittedEvents].push(event);\n        this.bus.publish(this.actor);\n        this.applied = true;\n        if (![\"subscribe\", \"unsubscribe\", \"_subscribe\", \"_unsubscribe\"].includes(type)) {\n            const actorType = this.actor.type;\n            (async () => {\n                const emitter = await this.get(\"ActorEventEmitter\", \"ActorEventEmitter\" + actorType);\n                if (emitter) {\n                    emitter.publish(event);\n                }\n            })();\n            let listeners = this.actor.json.listeners;\n            let handles = listeners[type];\n            let emit = async (handles) => {\n                if (handles) {\n                    for (let id in handles) {\n                        let { handleMethodName, listenerType } = handles[id];\n                        let actor = await this.get(listenerType, id);\n                        if (actor) {\n                            actor[handleMethodName](event);\n                        }\n                    }\n                }\n            };\n            emit(handles);\n            handles = listeners[\"*\"];\n            emit(handles);\n        }\n    }\n    lock(timeout) {\n        this.lockMode = true;\n        this.timeout = timeout;\n    }\n    unlock() {\n        this.lockMode = false;\n        // todo\n    }\n    sagaBegin() {\n        if (this.sagaId && !this.sagaMode) {\n            throw new Error(\"Cannot include child Saga\");\n        }\n        this.sagaMode = true;\n        this.sagaId = uuid();\n    }\n    sagaEnd() {\n        if (this.sagaMode) {\n            this.sagaMode = false;\n            this.sagaId = null;\n        }\n    }\n    async rollback() {\n        if (this.sagaMode) {\n            return await this.bus.rollback(this.sagaId);\n        }\n        else {\n            throw new Error(\"no saga\");\n        }\n    }\n    actorLock(actor) {\n        const that = this;\n        return new Promise((resolve, reject) => {\n            tryLock();\n            async function tryLock() {\n                var isLock = await actor.lock({ key: that.key, timeout: that.timeout });\n                if (isLock)\n                    resolve();\n                else {\n                    setTimeout(tryLock, 300);\n                }\n            }\n        });\n    }\n    async get(type, id) {\n        if (id === this.actor.id)\n            throw new Error(\"Don't be get self\");\n        let proxy = await this.getActor(type, id, this.sagaId || null, this.key);\n        if (!proxy)\n            return null;\n        if (this.lockMode) {\n            await this.actorLock(proxy);\n        }\n        return proxy;\n    }\n    async create(type, data) {\n        return this.createActor(...arguments, this.sagaId);\n    }\n    async subscribe(event, handleMethodName) {\n        let { actorId, actorType, type } = event;\n        if (actorId && actorType && type) {\n            let actor = await this.get(actorType, actorId);\n            if (actor) {\n                actor.subscribe(type, this.actor.type, this.actor.id, handleMethodName);\n            }\n        }\n        else if (actorType) {\n            let actor = await this.get(\"ActorEventEmitter\", \"ActorEventEmitter\" + actorType);\n            if (!actor) {\n                actor = await this.create(\"ActorEventEmitter\", { id: \"ActorEventEmitter\" + actorType });\n            }\n            await actor.subscribe(actorType, this.actor.type, this.actor.id, handleMethodName);\n        }\n    }\n    async unsubscribe(event) {\n        let { actorId, actorType, type } = event;\n        if (actorId && actorType && type) {\n            let actor = await this.get(actorType, actorId);\n            if (actor) {\n                actor.unsubscribe(type, this.actor.id);\n            }\n        }\n        else if (actorType) {\n            let actor = await this.get(\"ActorEventEmitter\", \"ActorEventEmitter\" + actorType);\n            if (actor) {\n                await actor.unsubscribe(actorType, this.actor.id);\n            }\n        }\n    }\n    async getHistory() {\n        return await this.repo.getHistory(this.actor.id);\n    }\n}\nexports.default = Service;\n//# sourceMappingURL=Service.js.map"],"sourceRoot":""}